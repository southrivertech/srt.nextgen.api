{
  "openapi": "3.0.1",
  "info": {
    "title": "Titan API",
    "description": "OpenAPI based interface for interacting with SRT's NextGen Server platform",
    "termsOfService": "https://southrivertech.com/wp-content/uploads/2022/11/EULA_Cloud_2022.pdf",
    "contact": {
      "name": "Technical Support",
      "url": "https://helpdesk.southrivertech.com"
    },
    "license": {
      "name": "Cloud EULA",
      "url": "https://southrivertech.com/wp-content/uploads/2022/11/EULA_Cloud_2022.pdf"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:31443",
      "description": "Titan REST API"
    }
  ],
  "paths": {
    "/api/Authenticate/Login": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "summary": "Send login credentials and an optional ticket ID and receive an access token in return for subsequent api calls.\r\nYou will need to send this token in the Authorization header as a Bearer token, \r\ni.e. \"Authorization: Bearer token",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultLogin"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultLogin"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultLogin"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Authenticate/Logout": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "summary": "Logout with access token",
        "operationId": "Logout",
        "parameters": [
          {
            "name": "bearerToken",
            "in": "query",
            "description": "A valid bearer token received from a successful call to Login",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Datasources/Instances": {
      "post": {
        "tags": [
          "Databases"
        ],
        "summary": "Generates a list of sqlserver instances",
        "operationId": "DataSource_Instances",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ResponseType\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Datasources/{serverInstance}": {
      "post": {
        "tags": [
          "Databases"
        ],
        "summary": "Generates a list of sqlserver instances",
        "operationId": "DataSource_Databases",
        "parameters": [
          {
            "name": "serverInstance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ResponseType\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Datasources/{serverInstance}/{databaseName}": {
      "post": {
        "tags": [
          "Databases"
        ],
        "summary": "Generates a list of sqlserver instances",
        "operationId": "DataSource_Servers",
        "parameters": [
          {
            "name": "serverInstance",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDataSourceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ResponseType\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Domains": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "List domain servers along with their status",
        "operationId": "Dom_Svr_List",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Domain/{domainGUID}": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain settings for the specified GUID. this can be the local domain GUID, or one of the remote ras domain nodes.",
        "description": "Return domain settings for the specified domainGUID",
        "operationId": "Dom_Get_Params",
        "parameters": [
          {
            "name": "domainGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Query string parameter to limit results returned",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Domain"
        ],
        "summary": "Set domain settings",
        "operationId": "Dom_Set_Params",
        "parameters": [
          {
            "name": "domainGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDomainParamsPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDomainParamsPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDomainParamsPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDomainParamsPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Domain/{domainGUID}/Utils": {
      "post": {
        "tags": [
          "Domain"
        ],
        "summary": "Generic endpoint to perform various utility actions",
        "description": "A valid DomainGUID must be specified. Actions are: VARS",
        "operationId": "Dom_Run_Action",
        "parameters": [
          {
            "name": "domainGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainAction",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Domain/Exec": {
      "post": {
        "tags": [
          "Domain"
        ],
        "summary": "Generic endpoint to perform non-specific processing",
        "description": "This endpoint has very few requirements aside from authentication. The goal of this endpoint is to\r\nallow the client to pass-thru a list of generic arguments and have the server determine how to act.",
        "operationId": "Dom_Run_Exec",
        "requestBody": {
          "description": "a serialized dictionary of string,string tag/value pairs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/List/{fileId}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List files",
        "operationId": "Get_File_List",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The folder id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "The type of folder to list, valid options are \"myfiles\", \"myshares\", \"sharedwithme\", \"domainlogs\", \"domainfiles\"",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/CloudFiles": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List cloud files",
        "description": "Return files at the server level which will consist of a root folder that contains\r\n            all cloud folders defined at the server level",
        "operationId": "Get_List_MyCloud",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server to list files for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "query",
            "description": "The folder id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/Download/{fileId}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Download a file",
        "operationId": "FileDownload",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The id for the file",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "The type of file, valid options are \"myfiles\", \"myshares\", \"sharedwithme\", \"domainlogs\", \"domainfiles\"",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Files": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete files",
        "description": "Specify the file id's to delete in the request body",
        "operationId": "File_Delete",
        "parameters": [
          {
            "name": "fileType",
            "in": "query",
            "description": "The type of folder to list, valid options are \"myfiles\", \"myshares\", \"sharedwithme\"",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDeleteRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDeleteRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDeleteRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/FileInfo/{fileId}": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Get file information",
        "description": "Get metadata information for a file",
        "operationId": "File_Get_Info",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/DirectoryCreate": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Create directory",
        "description": "Create a new folder. Specify the folder name in the ApiFileDirectoryCreateRequest body along with the parent folder id",
        "operationId": "File_Create_Directory",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDirectoryCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDirectoryCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDirectoryCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiFileDirectoryCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List groups for the specified server and auth provider",
        "operationId": "Grp_Get_List",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The authentication GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create a new group",
        "description": "Specify the Group name in the request object. If successful the new group paramaters will be returned",
        "operationId": "Grp_Create",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Groups/{groupGUID}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group parameters for the specified group",
        "description": "Use the fields query string parameter to limit the results. You can pass in the poco object names for\r\nexample \"Acct\" to return just Acct poco settings or you can further refine it\r\nwith Acct.LockAcctForBadPassCnt to return just a single property. You can specify\r\nmultiple fields by using a comma as a delimeter.",
        "operationId": "Grp_Get_Params",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The id for the server in question",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The id for the authentication service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupGUID",
            "in": "path",
            "description": "The id for the group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Query string parameter to limit results returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byGroupName",
            "in": "query",
            "description": "Set this to true to lookup the user by group instead of id",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "Update group parameters",
        "description": "Update the specified group parameters with the supplied settings in the patch body.",
        "operationId": "Grp_Set_Params",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byGroupName",
            "in": "query",
            "description": "groupId is a group name instead of an id",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "ApiUserParamsPoco object to update user parameters",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultGroupParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete the specified group.",
        "operationId": "Grp_Delete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byGroupName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Group/Exec": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Generic endpoint to perform non-specific processing",
        "description": "This endpoint has very few requirements aside from authentication. The goal of this endpoint is to\r\nallow the client to pass-thru a list of generic arguments and have the server determine how to act.",
        "operationId": "Grp_Do_Action",
        "requestBody": {
          "description": "a serialized dictionary of string,string tag/value pairs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/IpAddresses/{serverGUID}": {
      "get": {
        "tags": [
          "IpAddresses"
        ],
        "summary": "List IP addresses for the current machine",
        "operationId": "IpAddress_List",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiIpAddressList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/IPBans/{serverGUID}": {
      "get": {
        "tags": [
          "IPBans"
        ],
        "summary": "List IP Bans for the specified server",
        "operationId": "IpBanList_Get",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server to get IP ban information from",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiIPBanInfo\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IPBans"
        ],
        "summary": "Update IPBan list",
        "operationId": "IpBanList_Set",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server to set IP bans for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiIPBanInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiIPBanInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiIPBanInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiIPBanInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiIPBanInfo\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Licenses": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "List licenses",
        "operationId": "Lic_List",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              }
            }
          }
        }
      }
    },
    "/api/Licenses/Entitlements": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "Get license entitlements",
        "operationId": "Lic_GetEntitlements",
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiLicenseEntitlements\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Licenses/{licenseId}": {
      "delete": {
        "tags": [
          "Licenses"
        ],
        "summary": "Delete a license/regcode.",
        "operationId": "Lic_Delete",
        "parameters": [
          {
            "name": "licenseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Licenses"
        ],
        "summary": "Add a license/regcode and activate it",
        "operationId": "Lic_Add",
        "parameters": [
          {
            "name": "licenseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              }
            }
          }
        }
      }
    },
    "/api/Licenses/{licenseId}/State": {
      "post": {
        "tags": [
          "Licenses"
        ],
        "summary": "Perform an action on a license",
        "operationId": "Lic_SetState",
        "parameters": [
          {
            "name": "licenseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Valid options are \"activate\", \"deactivate\"",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseList"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "List all servers along with their status",
        "operationId": "Svr_Get_List",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Get server settings for the specified server from the specified server.",
        "description": "Use \"default\" as the serverGUID to return \r\nserver settings for the current server you connected to. Use the fields query \r\nstring parameter to limit the results. You can pass in the poco object names for\r\nexample \"Acct\" to return just Acct poco settings or you can further refine it\r\nwith Acct.LockAcctForBadPassCnt to return just a single property. You can specify\r\nmultiple fields by using a comma as a delimeter.",
        "operationId": "Svr_Get_Params",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The id for the server in question",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Query string parameter to filter the json object returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "summary": "Delete a server.",
        "operationId": "Svr_Delete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "the server to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dropDB",
            "in": "query",
            "description": "delete database when deleting server",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "summary": "Set server settings",
        "operationId": "Svr_Set_Params",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Query string parameter to filter the json object returned",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/State": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Get server state",
        "operationId": "Svr_Get_State",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Perforam verious actions on the server. Valid actions are\r\n quota -> returns the amount of storage currently in use by the server.\r\n start -> Starts the specified server\r\n stop -> stops the specified server\r\n restart -> stops/starts the specified server\r\n backup -> generates a backup of the server and writes it to the %SVR.BACKUPSDIR% folder\r\n restore -> restores the backup from the %SVR.BACKUPSDIR% to the existing ServerGUID\r\n import -> Imports a server configuration as the specified server guid. overwrites any existing guid\r\n export -> Exports the server configuration and returns it as a base64 encoded json blob\r\n rotatelog -> rotates the server log\r\n prunestats -> prunes the stats database according to the pruning rules",
        "operationId": "Svr_Set_State",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The action to perform",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerStateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerStateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerStateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/Create": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Create a new server. a ServerName must be supplied",
        "operationId": "Svr_Create",
        "requestBody": {
          "description": "ApiServerCreateRequest object with new server information",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/EmailTest": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Test Email connection",
        "operationId": "Svr_Test_Email",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server to test email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "smtp email settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsEmailPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsEmailPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsEmailPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsEmailPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/RunAction": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Perforam verious actions on the server through the LAS. Valid actions are: import (ApiServerParamsPoco)",
        "operationId": "Svr_Run_Action",
        "requestBody": {
          "description": "The action to perform",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/Vars": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Returns macro variables at either the server, user or group level",
        "operationId": "Svr_Get_Vars",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "The level to display variables for: \"server\" | \"user\" | \"group\" | \"domain\"",
            "schema": {
              "type": "string",
              "default": "server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerVarsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerVarsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerVarsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/ExececuteRequest": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Generic endpoint to perform non-specific processing. This was mainly designed to be used by the command line\r\nnxcli utility",
        "description": "This endpoint has very few requirements aside from authentication. The goal of this endpoint is to\r\nallow the client to pass-thru a list of generic arguments and have the server determine how to act.",
        "operationId": "Svr_Execute_Request",
        "requestBody": {
          "description": "a serialized dictionary of string,string tag/value pairs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerExecResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerExecResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultServerExecResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors": {
      "get": {
        "tags": [
          "ServersAuthConnectors"
        ],
        "summary": "Get a list of the authentication connectors",
        "operationId": "Svr_AuthList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerAuthConnectorList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}": {
      "get": {
        "tags": [
          "ServersAuthConnectors"
        ],
        "summary": "Get user authentication connector settings",
        "operationId": "Svr_AuthGet",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerParamsAuthPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServersAuthConnectors"
        ],
        "summary": "Update user authentication connector settings",
        "operationId": "Svr_AuthSet",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerParamsAuthPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersAuthConnectors"
        ],
        "summary": "Delete user authentication connector",
        "operationId": "Svr_AuthDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Result\" will contain the status of the request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/Create": {
      "post": {
        "tags": [
          "ServersAuthConnectors"
        ],
        "summary": "Create a user authentication connector",
        "description": "Supply the ApiServerParamsAuthPoco poco for the auth connector you are creating. The AuthConfig member can be one of the \r\n            following pocos, ApiAuthDataLdapPoco, NxAuthDataAdsiPoco, NxAuthDataNtSamPoco",
        "operationId": "Svr_AuthCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The auth poco",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerParamsAuthPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/CloudCosts": {
      "post": {
        "tags": [
          "ServersCloudCosts"
        ],
        "summary": "Get cloud costs for the specific cloud drive",
        "operationId": "Svr_CloudCosts_Get",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCostRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCostRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCostRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCostRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiCloudCostResponse\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/CloudFolders": {
      "get": {
        "tags": [
          "ServersCloudFolders"
        ],
        "summary": "List cloud folders at the server leevel",
        "operationId": "Svr_CloudList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiCloudFolderList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersCloudFolders"
        ],
        "summary": "Create a new cloud folder at the server level",
        "description": "Supply the new cloud folder poco in the body of the request. A new CloudGUID will be created",
        "operationId": "Svr_CloudCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsCloudFolderPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsCloudFolderPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsCloudFolderPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsCloudFolderPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiCloudFolderList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServersCloudFolders"
        ],
        "summary": "Update settings for a cloud folder at the server level",
        "description": "Supply a list of cloud folder pocos to update",
        "operationId": "Svr_CloudUpdate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiCloudFolderList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersCloudFolders"
        ],
        "summary": "Delete cloud folder",
        "description": "Supply a list of cloud folder pocos with the CloudGUID set to the ones you wish to delete",
        "operationId": "Svr_CloudDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiCloudFolderList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/DirAccess": {
      "get": {
        "tags": [
          "ServersDirAccess"
        ],
        "summary": "List directory access entries at the server level",
        "operationId": "Svr_Get_DirAccessList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Users/{userGUID}/DirAccess": {
      "get": {
        "tags": [
          "ServersDirAccess"
        ],
        "summary": "List directory access entries at the user level",
        "operationId": "Svr_Get_DirAccessUserList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The Authenticator GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "The username or GUID for the username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Groups/{groupGUID}/DirAccess": {
      "get": {
        "tags": [
          "ServersDirAccess"
        ],
        "summary": "List dir access entries at the group level",
        "operationId": "Svr_Get_DirAccessGroupList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The Authenticator GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupGUID",
            "in": "path",
            "description": "The group name or GUID for the group name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/DirAccess/{ownerGUID}": {
      "post": {
        "tags": [
          "ServersDirAccess"
        ],
        "summary": "Create a directory access entry for the specified owner",
        "description": "Create a directory access entry at either the server, user or group level by specifying the proper ownerGUID",
        "operationId": "Svr_Create_DirAccess",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "path",
            "description": "The owner GUID (server, group, or user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/DirAccess/{dirAccessGUID}/Owner/{ownerGUID}": {
      "patch": {
        "tags": [
          "ServersDirAccess"
        ],
        "summary": "Update the settings for a directory access entry",
        "description": "Update settings for a directory access entry at either the server, user or group level by specifying the proper ownerGUID",
        "operationId": "Svr_Set_DirAccess",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dirAccessGUID",
            "in": "path",
            "description": "The dir access Id to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "path",
            "description": "The owner GUID (server, group, or user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersDirAccess"
        ],
        "summary": "Delete a dir access entry for the specified owner",
        "description": "Delete a dir access entry at either the server, user or group level by specifying the proper ownerGUID",
        "operationId": "Svr_Delete_DirAccess",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dirAccessGUID",
            "in": "path",
            "description": "The dir access Id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "path",
            "description": "The owner GUID (server, group, or user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Events": {
      "get": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Get a list of events",
        "operationId": "Svr_EventsList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiEventHandlers\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Update event handler",
        "description": "Supply the ApiEeventHandler object in the body of the request",
        "operationId": "Svr_EventHandlerUpdate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Result\" will contain the status of the request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Create event handler",
        "description": "Supply the ApiEeventHandler object in the body of the request",
        "operationId": "Svr_EventHandlerCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Result\" will contain the status of the request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/EventHandlerActionTree": {
      "get": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Get event handler action tree",
        "operationId": "Svr_EventsActionTree",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiEventHandlerActionTree\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/EventHandlerConditionTree": {
      "get": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Get event handler condition tree",
        "operationId": "Svr_EventsConditionTree",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiEventHandlerConditionTree\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/EventHandlerEventTree": {
      "get": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Get event handler event tree",
        "operationId": "Svr_EventsEventTree",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiEventHandlerEventTree\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/EventHandlerConditionMeta": {
      "get": {
        "tags": [
          "ServersEvents"
        ],
        "summary": "Get event handler condition meta",
        "operationId": "Svr_EventsConditionMeta",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiEventHandlerConditionMeta\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Nodes": {
      "get": {
        "tags": [
          "ServersNodes"
        ],
        "summary": "Get a list of server nodes",
        "operationId": "Svr_NodeList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerNodeList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Nodes/{serverNodeGUID}": {
      "get": {
        "tags": [
          "ServersNodes"
        ],
        "summary": "Get a specific node settings",
        "operationId": "Svr_NodeGetParams",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serverNodeGUID",
            "in": "path",
            "description": "Server Node GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerParamsNodesPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServersNodes"
        ],
        "summary": "Set a specific node settings",
        "operationId": "Svr_NodeSetParams",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serverNodeGUID",
            "in": "path",
            "description": "Server Node GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerParamsNodesPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersNodes"
        ],
        "summary": "Delete a server node",
        "operationId": "Svr_NodeDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serverNodeGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerNodeList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Nodes/Create": {
      "post": {
        "tags": [
          "ServersNodes"
        ],
        "summary": "Create a server node",
        "operationId": "Svr_NodeCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerParamsNodesPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/PgpKeys": {
      "get": {
        "tags": [
          "ServersPgpKeys"
        ],
        "summary": "Get a list of Pgp keys",
        "operationId": "Svr_PgpKeysList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiPgpKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersPgpKeys"
        ],
        "summary": "Create a Pgp Key",
        "description": "Creates a new Pgp key and returns the current list of Pgp keys",
        "operationId": "Svr_PgpKeysCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGroupGUID",
            "in": "query",
            "description": "Optional user or group GUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Key information to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiPgpKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/PgpKeys/{PgpKeyGUID}": {
      "delete": {
        "tags": [
          "ServersPgpKeys"
        ],
        "summary": "Delete a Pgp Key",
        "description": "Deletes a Pgp key and returns the current list of Pgp keys",
        "operationId": "Svr_PgpKeysDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PgpKeyGUID",
            "in": "path",
            "description": "The key to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGroupGUID",
            "in": "query",
            "description": "Optional user or group GUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/PgpKeys/{PgpKeyGUID}/Export": {
      "post": {
        "tags": [
          "ServersPgpKeys"
        ],
        "summary": "Export Pgp key",
        "description": "Exports the Pgp key identified by PgpKeyGUID",
        "operationId": "Svr_PgpKeysExport",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PgpKeyGUID",
            "in": "path",
            "description": "Pgp Key GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyExport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyExport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyExport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/PgpKeys/Import": {
      "post": {
        "tags": [
          "ServersPgpKeys"
        ],
        "summary": "Import Pgp key",
        "description": "Imports the Pgp key data that is submitted in the request",
        "operationId": "Svr_PgpKeysImport",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyImport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyImport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyImport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiPgpKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Reports": {
      "get": {
        "tags": [
          "ServersReports"
        ],
        "summary": "Get a list of reports",
        "operationId": "Svr_ReportsList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerReportList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersReports"
        ],
        "summary": "Create a report",
        "description": "Creates a report and returns the current list of reports",
        "operationId": "Svr_ReportsCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerReportCreate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerReportCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerReportCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerReportCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Reports/Export/{reportGUID}": {
      "get": {
        "tags": [
          "ServersReports"
        ],
        "summary": "Export a report",
        "operationId": "Svr_ReportsExport",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportGUID",
            "in": "path",
            "description": "The report GUID to export",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Reports/Run/{reportGUID}": {
      "get": {
        "tags": [
          "ServersReports"
        ],
        "summary": "Run a report",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportGUID",
            "in": "path",
            "description": "The report GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Reports/{reportGUID}": {
      "delete": {
        "tags": [
          "ServersReports"
        ],
        "summary": "Delete a report",
        "description": "Deletes the specified report and returns a list of current reports",
        "operationId": "Svr_ReportsDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportGUID",
            "in": "path",
            "description": "The report GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerReportList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/ReportsOutput": {
      "get": {
        "tags": [
          "ServersReportsOutput"
        ],
        "summary": "Get a list generated report output files",
        "operationId": "Svr_OutputReportsList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerReportList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/ReportsOutput/{fileId}": {
      "get": {
        "tags": [
          "ServersReportsOutput"
        ],
        "summary": "Download a report output file",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The file to download, set this to the Document.Name as returned in the Reports Output List command",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ServersReportsOutput"
        ],
        "summary": "Delete a report output file",
        "description": "Deletes the specified report output file specified in the Document.Name property and returns a list of current reports",
        "operationId": "Svr_ReportsOutputDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The file to download, set this to the Document.Name as returned in the Reports Output List command",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerReportList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/SshKeys": {
      "get": {
        "tags": [
          "ServersSshKeys"
        ],
        "summary": "Get a list of ssh keys",
        "operationId": "Svr_SshKeysList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiSshKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersSshKeys"
        ],
        "summary": "Create a ssh Key",
        "description": "Creates a new ssh key and returns the current list of ssh keys",
        "operationId": "Svr_SshKeysCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGroupGUID",
            "in": "query",
            "description": "Optional user or group GUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Key information to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiSshKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/SshKeys/{sshKeyGUID}": {
      "delete": {
        "tags": [
          "ServersSshKeys"
        ],
        "summary": "Delete a ssh Key",
        "description": "Deletes a ssh key and returns the current list of ssh keys",
        "operationId": "Svr_SshKeysDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sshKeyGUID",
            "in": "path",
            "description": "The key to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGroupGUID",
            "in": "query",
            "description": "Optional user or group GUID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiSshKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/SshKeys/{sshKeyGUID}/Export": {
      "post": {
        "tags": [
          "ServersSshKeys"
        ],
        "summary": "Export ssh key",
        "description": "Exports the ssh key identified by sshKeyGUID",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sshKeyGUID",
            "in": "path",
            "description": "Ssh Key GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyExport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyExport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyExport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/SshKeys/Import": {
      "post": {
        "tags": [
          "ServersSshKeys"
        ],
        "summary": "Import ssh key",
        "description": "Imports the ssh key data that is submitted in the request",
        "operationId": "Svr_SshKeysImport",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyImport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyImport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyImport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiSshKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Stats/DiskUsage": {
      "get": {
        "tags": [
          "ServersStats"
        ],
        "summary": "Get disk usage statistics",
        "operationId": "Svr_StatsGetDiskUsage",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiDiskUsageResponse\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Tickets/MyShares": {
      "get": {
        "tags": [
          "ServersTickets"
        ],
        "summary": "List my shares",
        "operationId": "Svr_ListMyShares",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTicketListResponse\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Tickets/SharedWithMe": {
      "get": {
        "tags": [
          "ServersTickets"
        ],
        "summary": "List items shared with me",
        "operationId": "Svr_ListSharedWithme",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTicketListResponse\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/TlsKeys": {
      "get": {
        "tags": [
          "ServersTlsKeys"
        ],
        "summary": "Get a list of certificates",
        "operationId": "Svr_TlsKeysList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTlsKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersTlsKeys"
        ],
        "summary": "Create a Tls Key",
        "description": "Creates a new Certificate or CSR and returns the current list of tls keys",
        "operationId": "Svr_TlsKeysCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyInfo"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyInfo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyInfo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTlsKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/TlsKeys/{tlsKeyGUID}": {
      "delete": {
        "tags": [
          "ServersTlsKeys"
        ],
        "summary": "Delete a Tls Key",
        "description": "Deletes a tls key and returns the current list of tls keys",
        "operationId": "Svr_TlsKeysDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tlsKeyGUID",
            "in": "path",
            "description": "The key to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTlsKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/TlsKeys/{tlsKeyGUID}/ExportCert": {
      "post": {
        "tags": [
          "ServersTlsKeys"
        ],
        "summary": "Export certificate",
        "description": "Exports the certificate identified by tlsKeyGUID",
        "operationId": "Svr_TlsKeysExport",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tlsKeyGUID",
            "in": "path",
            "description": "Tls Key GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportCsr",
            "in": "query",
            "description": "Export the CSR or Certificate",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyExport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyExport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyExport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns exported certificate",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/TlsKeys/CertImport": {
      "post": {
        "tags": [
          "ServersTlsKeys"
        ],
        "summary": "Import certificate",
        "description": "Imports the certificate data that is submitted in the request",
        "operationId": "Svr_TlsKeysImport",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTlsKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/TlsKeys/CertUpdate": {
      "post": {
        "tags": [
          "ServersTlsKeys"
        ],
        "summary": "Certificate update",
        "description": "Updates the certificate / csr",
        "operationId": "Svr_TlsKeysUpdate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiTlsKeyList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/Unc": {
      "get": {
        "tags": [
          "ServersUnc"
        ],
        "summary": "Get a list of UNC paths",
        "operationId": "Svr_UncList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerUncList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServersUnc"
        ],
        "summary": "Update Unc paths",
        "description": "Send in a list of of unc paths to be updated",
        "operationId": "Svr_UncUpdate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerUncList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServersUnc"
        ],
        "summary": "Create Unc paths",
        "description": "Send in a list of of unc paths to be created",
        "operationId": "Svr_UncCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerUncList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersUnc"
        ],
        "summary": "Delete Unc paths",
        "description": "Send in a list of of unc paths to be deleted",
        "operationId": "Svr_UncDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiServerUncList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiServerUncList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/VirtualFolders": {
      "get": {
        "tags": [
          "ServersVirtualFolders"
        ],
        "summary": "List virtual folders at the server level",
        "operationId": "Svr_VirtualFoldersList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiVirtualFolderResponse\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Users/{userGUID}/VirtualFolders": {
      "get": {
        "tags": [
          "ServersVirtualFolders"
        ],
        "summary": "List virtual folders at the user level",
        "operationId": "Svr_List_VirtualFoldersUser",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The Authenticator GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "The username or GUID for the username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Groups/{groupGUID}/VirtualFolders": {
      "get": {
        "tags": [
          "ServersVirtualFolders"
        ],
        "summary": "List virtual folders at the group level",
        "operationId": "Svr_List_VirtualFoldersGroup",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The Authenticator GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupGUID",
            "in": "path",
            "description": "The group name or GUID for the group name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/VirtualFolders/{ownerGUID}": {
      "post": {
        "tags": [
          "ServersVirtualFolders"
        ],
        "summary": "Create a virtual folder for the specified owner",
        "description": "Create a virtual folder at either the server, user or group level by specifying the proper ownerGUID",
        "operationId": "Svr_VirtualFoldersCreate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "path",
            "description": "The owner GUID (server, group, or user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiVirtualFolderPoco\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/VirtualFolders/{virtualFolderGUID}/Owner/{ownerGUID}": {
      "patch": {
        "tags": [
          "ServersVirtualFolders"
        ],
        "summary": "Update the settings for a virtual folder",
        "description": "Update settings for a virtual folder at either the server, user or group level by specifying the proper ownerGUID",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "virtualFolderGUID",
            "in": "path",
            "description": "The virtual folder Id to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "path",
            "description": "The owner GUID (server, group, or user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServersVirtualFolders"
        ],
        "summary": "Delete a virtual folder for the specified owner",
        "description": "Delete a virtual folder at either the server, user or group level by specifying the proper ownerGUID",
        "operationId": "Svr_VirtualFoldersDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "virtualFolderGUID",
            "in": "path",
            "description": "The virtual folder Id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerGUID",
            "in": "path",
            "description": "The owner GUID (server, group, or user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Result will contain the status of the request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sessions/{serverGUID}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List sessions",
        "operationId": "Svr_SessionList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server to get session information from",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users for the specified server and auth provider",
        "operationId": "Usr_Get_List",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The authentication GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Specify the Username and Password in the request object. If successful the new user paramaters will be returned",
        "operationId": "Usr_Create",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Users/{userGUID}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user parameters for the specified user",
        "description": "Use \"default\" as the serverGUID to return \r\nuser settings for the current server you connected to. Use the fields query \r\nstring parameter to limit the results. You can pass in the poco object names for\r\nexample \"Acct\" to return just Acct poco settings or you can further refine it\r\nwith Acct.LockAcctForBadPassCnt to return just a single property. You can specify\r\nmultiple fields by using a comma as a delimeter.",
        "operationId": "Usr_Get_Params",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The id for the server in question",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The id for the authentication service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "The User GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Query string parameter to limit results returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byUserName",
            "in": "query",
            "description": "Set this to true to lookup the user by name instead of id",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user parameters",
        "description": "Update the specified user parameters with the supplied settings in the patch body.",
        "operationId": "Usr_Set_Params",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byUserName",
            "in": "query",
            "description": "userId is a username instead of an id",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "createHomeDirNow",
            "in": "query",
            "description": "Create users home directory",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "ApiUserParamsPoco object to update user parameters",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserParamsPoco"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete the specified user.",
        "operationId": "Usr_Delete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byUserName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Perform an action on a user",
        "description": "Specify the action to perform with the action query parameter. Valid options are \"getHomeDir\", \"setpassword\",\r\n\"resetpassword\"",
        "operationId": "Usr_Run_Action",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byUserName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserActionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserActionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserActionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Srt.Api.Models.ApiUserActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserActionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserActionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Users/{userGUID}/QuotaInfo": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user quota information for the specified user",
        "description": "Use \"default\" as the serverGUID to return \r\nuser settings for the current server you connected to.",
        "operationId": "Usr_Get_Quota",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The id for the server in question",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The id for the authentication service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "The user GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byUserName",
            "in": "query",
            "description": "Set this to true to lookup the user by name instead of id",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultQuotaInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultQuotaInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResultQuotaInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Generic endpoint to perform non-specific processing",
        "description": "This endpoint has very few requirements aside from authentication. The goal of this endpoint is to\r\nallow the client to pass-thru a list of generic arguments and have the server determine how to act.",
        "operationId": "Usr_Do_Action",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserExecResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserExecResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Srt.Api.Models.ApiResultUserExecResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Servers/{serverGUID}/AuthConnectors/{authGUID}/Users/{userGUID}/CloudFolders": {
      "get": {
        "tags": [
          "UsersCloudFolders"
        ],
        "summary": "List cloud folders at the user leevel",
        "operationId": "Svr_UserCloudList",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "The authentication GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "The user GUID to list folders for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\"Response\" will contain an \"ApiCloudFolderList\" object",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "UsersCloudFolders"
        ],
        "summary": "Update settings for a cloud folder at the user level",
        "description": "Supply a list of cloud folder pocos to update",
        "operationId": "Svr_UserCloudUpdate",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "Authentication GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "User GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsCloudFolderPoco"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UsersCloudFolders"
        ],
        "summary": "Delete cloud folders at the user level",
        "description": "Supply a list of cloud folder GUIDs to delete",
        "operationId": "Svr_UserCloudDelete",
        "parameters": [
          {
            "name": "serverGUID",
            "in": "path",
            "description": "The Server GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authGUID",
            "in": "path",
            "description": "Authentication GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userGUID",
            "in": "path",
            "description": "User GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsCloudFolderPoco"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Srt.Api.Models.ApiResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Srt.Api.Models.ApiAuthDataAdHocPoco": {
        "type": "object",
        "properties": {
          "AuthGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AuthType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthType"
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IsDefault": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffixRequired": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffix": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthDataAdsiPoco": {
        "type": "object",
        "properties": {
          "AuthGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AuthType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthType"
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IsDefault": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffixRequired": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffix": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerPort": {
            "type": "integer",
            "format": "int32"
          },
          "Secure": {
            "type": "integer",
            "format": "int32"
          },
          "BindMethod": {
            "type": "integer",
            "format": "int32"
          },
          "HideDisabled": {
            "type": "integer",
            "format": "int32"
          },
          "UseNTHomeDir": {
            "type": "integer",
            "format": "int32"
          },
          "Creds": {
            "$ref": "#/components/schemas/Srt.NextGen.ServerCore.NxCredentials"
          },
          "UserCacheLife": {
            "type": "integer",
            "format": "int32"
          },
          "GroupCacheLife": {
            "type": "integer",
            "format": "int32"
          },
          "AuthUserPrecache": {
            "type": "integer",
            "format": "int32"
          },
          "GroupsBaseDN": {
            "type": "string",
            "nullable": true
          },
          "GroupCategoryFilter": {
            "type": "string",
            "nullable": true
          },
          "GroupClassFilter": {
            "type": "string",
            "nullable": true
          },
          "GroupSearchScope": {
            "type": "integer",
            "format": "int32"
          },
          "UsersBaseDN": {
            "type": "string",
            "nullable": true
          },
          "UserCategoryFilter": {
            "type": "string",
            "nullable": true
          },
          "UserClassFilter": {
            "type": "string",
            "nullable": true
          },
          "UserSearchScope": {
            "type": "integer",
            "format": "int32"
          },
          "ServerTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "AttrGroupId": {
            "type": "string",
            "nullable": true
          },
          "AttrGroupName": {
            "type": "string",
            "nullable": true
          },
          "AttrGroupDN": {
            "type": "string",
            "nullable": true
          },
          "AttrGroupMembers": {
            "type": "string",
            "nullable": true
          },
          "AttrUserId": {
            "type": "string",
            "nullable": true
          },
          "AttrUserName": {
            "type": "string",
            "nullable": true
          },
          "AttrUserDN": {
            "type": "string",
            "nullable": true
          },
          "AttrUserMemberOf": {
            "type": "string",
            "nullable": true
          },
          "AttrUserFullName": {
            "type": "string",
            "nullable": true
          },
          "AttrUserHomeDir": {
            "type": "string",
            "nullable": true
          },
          "AttrUserEmail": {
            "type": "string",
            "nullable": true
          },
          "AttrUserPrimaryGID": {
            "type": "string",
            "nullable": true
          },
          "AttrUserEnabled": {
            "type": "string",
            "nullable": true
          },
          "UseNTImpersonation": {
            "type": "integer",
            "format": "int32"
          },
          "UseNTFSAcls": {
            "type": "integer",
            "format": "int32"
          },
          "Win32LogonType": {
            "type": "integer",
            "format": "int32"
          },
          "Win32LogonProvider": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthDataLdapPoco": {
        "type": "object",
        "properties": {
          "AuthGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AuthType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthType"
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IsDefault": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffixRequired": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffix": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerPort": {
            "type": "integer",
            "format": "int32"
          },
          "Secure": {
            "type": "integer",
            "format": "int32"
          },
          "BindMethod": {
            "type": "integer",
            "format": "int32"
          },
          "HideDisabled": {
            "type": "integer",
            "format": "int32"
          },
          "UseNTHomeDir": {
            "type": "integer",
            "format": "int32"
          },
          "Creds": {
            "$ref": "#/components/schemas/Srt.NextGen.ServerCore.NxCredentials"
          },
          "UserCacheLife": {
            "type": "integer",
            "format": "int32"
          },
          "GroupCacheLife": {
            "type": "integer",
            "format": "int32"
          },
          "AuthUserPrecache": {
            "type": "integer",
            "format": "int32"
          },
          "GroupsBaseDN": {
            "type": "string",
            "nullable": true
          },
          "GroupCategoryFilter": {
            "type": "string",
            "nullable": true
          },
          "GroupClassFilter": {
            "type": "string",
            "nullable": true
          },
          "GroupSearchScope": {
            "type": "integer",
            "format": "int32"
          },
          "UsersBaseDN": {
            "type": "string",
            "nullable": true
          },
          "UserCategoryFilter": {
            "type": "string",
            "nullable": true
          },
          "UserClassFilter": {
            "type": "string",
            "nullable": true
          },
          "UserSearchScope": {
            "type": "integer",
            "format": "int32"
          },
          "ServerTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "AttrGroupId": {
            "type": "string",
            "nullable": true
          },
          "AttrGroupName": {
            "type": "string",
            "nullable": true
          },
          "AttrGroupDN": {
            "type": "string",
            "nullable": true
          },
          "AttrGroupMembers": {
            "type": "string",
            "nullable": true
          },
          "AttrUserId": {
            "type": "string",
            "nullable": true
          },
          "AttrUserName": {
            "type": "string",
            "nullable": true
          },
          "AttrUserDN": {
            "type": "string",
            "nullable": true
          },
          "AttrUserMemberOf": {
            "type": "string",
            "nullable": true
          },
          "AttrUserFullName": {
            "type": "string",
            "nullable": true
          },
          "AttrUserHomeDir": {
            "type": "string",
            "nullable": true
          },
          "AttrUserEmail": {
            "type": "string",
            "nullable": true
          },
          "AttrUserPrimaryGID": {
            "type": "string",
            "nullable": true
          },
          "AttrUserEnabled": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthDataNativePoco": {
        "type": "object",
        "properties": {
          "AuthGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AuthType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthType"
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IsDefault": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffixRequired": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffix": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthDataNtSamPoco": {
        "type": "object",
        "properties": {
          "AuthGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AuthType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthType"
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IsDefault": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffixRequired": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffix": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "AuthLocalGroups": {
            "type": "integer",
            "format": "int32"
          },
          "UseNTImpersonation": {
            "type": "integer",
            "format": "int32"
          },
          "UseNTFSAcls": {
            "type": "integer",
            "format": "int32"
          },
          "HideDisabled": {
            "type": "integer",
            "format": "int32"
          },
          "UseNTHomeDir": {
            "type": "integer",
            "format": "int32"
          },
          "UserCacheLife": {
            "type": "integer",
            "format": "int32"
          },
          "GroupCacheLife": {
            "type": "integer",
            "format": "int32"
          },
          "AuthUserPrecache": {
            "type": "integer",
            "format": "int32"
          },
          "Win32LogonType": {
            "type": "integer",
            "format": "int32"
          },
          "Win32LogonProvider": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthDataPoco": {
        "type": "object",
        "properties": {
          "AuthGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AuthType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthType"
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IsDefault": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffixRequired": {
            "type": "integer",
            "format": "int32"
          },
          "DomainSuffix": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthDataPocoSerializer": {
        "type": "object",
        "properties": {
          "CanRead": {
            "type": "boolean",
            "readOnly": true
          },
          "CanWrite": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiAuthInfoPoco": {
        "type": "object",
        "properties": {
          "IsAdmin": {
            "type": "boolean",
            "nullable": true
          },
          "ServerGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServerNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "UserGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomainGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Entitlements": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseEntitlements"
          },
          "UpdateIsAvailable": {
            "type": "boolean",
            "nullable": true
          },
          "LicenseIsValid": {
            "type": "boolean",
            "nullable": true
          },
          "LicenseIsTrial": {
            "type": "boolean",
            "nullable": true
          },
          "TrialDaysRemaining": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UserRoles": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Authentication information returned from Login request"
      },
      "Srt.Api.Models.ApiAuthRequest": {
        "type": "object",
        "properties": {
          "UserName": {
            "type": "string",
            "description": "User's username",
            "nullable": true
          },
          "PassWord": {
            "type": "string",
            "description": "User's password",
            "nullable": true
          },
          "Ticket": {
            "type": "string",
            "description": "An optional Ticket ID",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains information needed by the /Login endpoint"
      },
      "Srt.Api.Models.ApiAuthResponse": {
        "type": "object",
        "properties": {
          "SessionInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiSession"
          },
          "AuthInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthInfoPoco"
          }
        },
        "additionalProperties": false,
        "description": "An object of this type is returned as the http response from\r\na request to the /Login endpoint"
      },
      "Srt.Api.Models.ApiAuthType": {
        "enum": [
          0,
          1,
          4,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.ApiBaseStats": {
        "type": "object",
        "properties": {
          "StartTime": {
            "type": "integer",
            "format": "int64"
          },
          "UploadCount": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadCount": {
            "type": "integer",
            "format": "int64"
          },
          "UploadTime": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadTime": {
            "type": "integer",
            "format": "int64"
          },
          "BytesInUse": {
            "type": "integer",
            "format": "int64"
          },
          "BytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "BytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "FileBytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "FileBytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "IOReads": {
            "type": "integer",
            "format": "int64"
          },
          "IOWrites": {
            "type": "integer",
            "format": "int64"
          },
          "InvalidCommandCount": {
            "type": "integer",
            "format": "int64"
          },
          "RatioFileUp": {
            "type": "integer",
            "format": "int64"
          },
          "RatioFileDn": {
            "type": "integer",
            "format": "int64"
          },
          "RatioKBUp": {
            "type": "integer",
            "format": "int64"
          },
          "RatioKBDn": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiBrandPocoData": {
        "type": "object",
        "properties": {
          "BrandGUID": {
            "type": "string",
            "nullable": true
          },
          "BrandDesc": {
            "type": "string",
            "nullable": true
          },
          "LogoImage": {
            "type": "string",
            "nullable": true
          },
          "LogoName": {
            "type": "string",
            "nullable": true
          },
          "Copyright": {
            "type": "string",
            "nullable": true
          },
          "CopyrightUrl": {
            "type": "string",
            "nullable": true
          },
          "FooterLeft": {
            "type": "string",
            "nullable": true
          },
          "FooterLeftUrl": {
            "type": "string",
            "nullable": true
          },
          "FooterRight": {
            "type": "string",
            "nullable": true
          },
          "FooterRightUrl": {
            "type": "string",
            "nullable": true
          },
          "LoginDisclaimer": {
            "type": "string",
            "nullable": true
          },
          "LoginName": {
            "type": "string",
            "nullable": true
          },
          "LoginWelcome": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudCost": {
        "type": "object",
        "properties": {
          "Cost": {
            "type": "number",
            "format": "double"
          },
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "Tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudCostDataPoint": {
        "type": "object",
        "properties": {
          "PeriodStartUtc": {
            "type": "integer",
            "format": "int64"
          },
          "PeriodEndUtc": {
            "type": "integer",
            "format": "int64"
          },
          "CostInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCost"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudCostGranularity": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.ApiCloudCostRequest": {
        "type": "object",
        "properties": {
          "CloudGUID": {
            "type": "string",
            "nullable": true
          },
          "PeriodStartUtc": {
            "type": "integer",
            "format": "int64"
          },
          "PeriodEndUtc": {
            "type": "integer",
            "format": "int64"
          },
          "Granularity": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCostGranularity"
          },
          "CostTag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudCostResponse": {
        "type": "object",
        "properties": {
          "DataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudCostDataPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudFolderList": {
        "type": "object",
        "properties": {
          "CloudFolderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudFolderPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudFolderPoco": {
        "type": "object",
        "properties": {
          "CloudGUID": {
            "type": "string",
            "nullable": true
          },
          "CloudName": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ConnectorName": {
            "type": "string",
            "nullable": true
          },
          "ServerUrl": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "ServerPortEnable": {
            "type": "boolean"
          },
          "ServerPortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "AccessToken": {
            "type": "string",
            "nullable": true
          },
          "RefreshToken": {
            "type": "string",
            "nullable": true
          },
          "SharePointSites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudSharePointSite"
            },
            "nullable": true
          },
          "AccessKey": {
            "type": "string",
            "nullable": true
          },
          "SecretKey": {
            "type": "string",
            "nullable": true
          },
          "BucketList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "BucketRegion": {
            "type": "string",
            "nullable": true
          },
          "ConnectorConfig": {
            "type": "string",
            "nullable": true
          },
          "CustomSettings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCloudSharePointSite": {
        "type": "object",
        "properties": {
          "SiteName": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCompanyInfo": {
        "type": "object",
        "properties": {
          "LongName": {
            "type": "string",
            "nullable": true
          },
          "ShortName": {
            "type": "string",
            "nullable": true
          },
          "WebsiteUrl": {
            "type": "string",
            "nullable": true
          },
          "SalesUrl": {
            "type": "string",
            "nullable": true
          },
          "SalesEmail": {
            "type": "string",
            "nullable": true
          },
          "ContactUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiComplexPasswordRulesPoco": {
        "type": "object",
        "properties": {
          "MinimumLength": {
            "type": "integer",
            "format": "int32"
          },
          "NoUsername": {
            "type": "integer",
            "format": "int32"
          },
          "RequireUC": {
            "type": "integer",
            "format": "int32"
          },
          "RequireLC": {
            "type": "integer",
            "format": "int32"
          },
          "RequireDigits": {
            "type": "integer",
            "format": "int32"
          },
          "RequireSpecial": {
            "type": "integer",
            "format": "int32"
          },
          "SpecialCharList": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiConst": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCredentials": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiCredentialsBasic": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDataSourceRequest": {
        "type": "object",
        "properties": {
          "DataSourceType": {
            "type": "string",
            "description": "Sqlite or SqlServer",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "description": "User's username",
            "nullable": true
          },
          "PassWord": {
            "type": "string",
            "description": "User's password",
            "nullable": true
          },
          "IntegratedSecurity": {
            "type": "boolean",
            "description": "if true then integreated windows security is used and username and password are ignored"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDataSourceResponse": {
        "type": "object",
        "properties": {
          "ServerList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiUtilSqlServerInfo"
            },
            "nullable": true
          },
          "InstanceList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "DatabaseList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDirAccessPoco": {
        "type": "object",
        "properties": {
          "Level": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "nullable": true
          },
          "AllowAce": {
            "type": "string",
            "nullable": true
          },
          "DenyAce": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDirAccessResponse": {
        "type": "object",
        "properties": {
          "DirAccessList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiDirAccessPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDiskUsage": {
        "type": "object",
        "properties": {
          "BytesUsed": {
            "type": "integer",
            "format": "int64"
          },
          "BytesFree": {
            "type": "integer",
            "format": "int64"
          },
          "FolderType": {
            "type": "integer",
            "format": "int32"
          },
          "DateTimeStamp": {
            "type": "integer",
            "format": "int64"
          },
          "DateTimeStampString": {
            "type": "string",
            "format": "date-time"
          },
          "CloudGuid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDiskUsageResponse": {
        "type": "object",
        "properties": {
          "DiskUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiDiskUsage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDomainExecResponse": {
        "type": "object",
        "properties": {
          "Vars": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Poco": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiDomainParamsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDomainList": {
        "type": "object",
        "properties": {
          "DomainList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiDomainParamsPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDomainParamsBasePoco": {
        "type": "object",
        "properties": {
          "DomainGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomNodeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "All Domain pocos have these elements."
      },
      "Srt.Api.Models.ApiDomainParamsLocalPoco": {
        "type": "object",
        "properties": {
          "DomainGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomNodeName": {
            "type": "string",
            "nullable": true
          },
          "TlsRasHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "TlsRasCertGUID": {
            "type": "string",
            "description": "This is my TLSRASCERTGUID TIP",
            "nullable": true
          },
          "TlsLanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "TlsLasCertGUID": {
            "type": "string",
            "nullable": true
          },
          "DomainDesc": {
            "type": "string",
            "description": "User friendly description for the domain",
            "nullable": true
          },
          "DomNodeDesc": {
            "type": "string",
            "nullable": true
          },
          "BaseDataDir": {
            "type": "string",
            "nullable": true
          },
          "BaseLogDir": {
            "type": "string",
            "nullable": true
          },
          "CompanyInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCompanyInfo"
          },
          "ProductInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiProductInfo"
          },
          "ProductEdition": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The local domain poco has everything"
      },
      "Srt.Api.Models.ApiDomainParamsPoco": {
        "type": "object",
        "properties": {
          "DomainGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomNodeName": {
            "type": "string",
            "nullable": true
          },
          "TlsRasHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "TlsRasCertGUID": {
            "type": "string",
            "description": "This is my TLSRASCERTGUID TIP",
            "nullable": true
          },
          "TlsLanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "TlsLasCertGUID": {
            "type": "string",
            "nullable": true
          },
          "DomainDesc": {
            "type": "string",
            "description": "User friendly description for the domain",
            "nullable": true
          },
          "DomNodeDesc": {
            "type": "string",
            "nullable": true
          },
          "BaseDataDir": {
            "type": "string",
            "nullable": true
          },
          "BaseLogDir": {
            "type": "string",
            "nullable": true
          },
          "CompanyInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCompanyInfo"
          },
          "ProductInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiProductInfo"
          },
          "ProductEdition": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Add a generic wrapper class on top incase we need it in the future"
      },
      "Srt.Api.Models.ApiDomainParamsRemotePoco": {
        "type": "object",
        "properties": {
          "DomainGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DomNodeName": {
            "type": "string",
            "nullable": true
          },
          "TlsRasHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "TlsRasCertGUID": {
            "type": "string",
            "description": "This is my TLSRASCERTGUID TIP",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Building on the base poco, add RAS connectivity for the remote domain pcoo"
      },
      "Srt.Api.Models.ApiDomainStats": {
        "type": "object",
        "properties": {
          "StartTime": {
            "type": "integer",
            "format": "int64"
          },
          "UploadCount": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadCount": {
            "type": "integer",
            "format": "int64"
          },
          "UploadTime": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadTime": {
            "type": "integer",
            "format": "int64"
          },
          "BytesInUse": {
            "type": "integer",
            "format": "int64"
          },
          "BytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "BytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "FileBytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "FileBytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "IOReads": {
            "type": "integer",
            "format": "int64"
          },
          "IOWrites": {
            "type": "integer",
            "format": "int64"
          },
          "InvalidCommandCount": {
            "type": "integer",
            "format": "int64"
          },
          "RatioFileUp": {
            "type": "integer",
            "format": "int64"
          },
          "RatioFileDn": {
            "type": "integer",
            "format": "int64"
          },
          "RatioKBUp": {
            "type": "integer",
            "format": "int64"
          },
          "RatioKBDn": {
            "type": "integer",
            "format": "int64"
          },
          "DomainGUID": {
            "type": "string",
            "nullable": true
          },
          "DomainName": {
            "type": "string",
            "nullable": true
          },
          "DomState": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiDomainUtilsResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionAVSCAN": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "FilePath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionBACKUP": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "BackupName": {
            "type": "string",
            "nullable": true
          },
          "BackupDesc": {
            "type": "string",
            "nullable": true
          },
          "BackupFile": {
            "type": "string",
            "nullable": true
          },
          "Restore": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionBANIP": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "IPAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionBREAK": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionBase": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionCLOUDTRANSFER": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "JobType": {
            "$ref": "#/components/schemas/Srt.Api.Models.TransferType"
          },
          "SourceFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.TransferFileItem"
            },
            "nullable": true
          },
          "DestinationPath": {
            "type": "string",
            "nullable": true
          },
          "SourcePath": {
            "type": "string",
            "nullable": true
          },
          "TransferMode": {
            "$ref": "#/components/schemas/Srt.Api.Models.FileTransferMode"
          },
          "PreserveSourcePathStructure": {
            "type": "boolean"
          },
          "DeleteSourceFileAfterCopy": {
            "type": "boolean"
          },
          "TransferFolderContentsOnly": {
            "type": "boolean"
          },
          "SyncIfExistsBoth": {
            "$ref": "#/components/schemas/Srt.Api.Models.SyncOptionsIfExistsBoth"
          },
          "SyncIfExistsSourceOnly": {
            "$ref": "#/components/schemas/Srt.Api.Models.SyncOptionsIfExistsSourceOnly"
          },
          "SyncIfExistsDestOnly": {
            "$ref": "#/components/schemas/Srt.Api.Models.SyncOptionsIfExistsDestOnly"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionDISABLE": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionDISKUSAGE": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "IsGroup": {
            "type": "boolean"
          },
          "UserGroupId": {
            "type": "string",
            "nullable": true
          },
          "ExecutionDate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionDOS": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "Dest": {
            "type": "string",
            "nullable": true
          },
          "MkDir": {
            "type": "boolean"
          },
          "RmDir": {
            "type": "boolean"
          },
          "Overwrite": {
            "type": "boolean"
          },
          "OnFailScript": {
            "type": "string",
            "nullable": true
          },
          "OnOkScript": {
            "type": "string",
            "nullable": true
          },
          "Recurse": {
            "type": "boolean"
          },
          "CreatedDaysAgo": {
            "type": "integer",
            "format": "int64"
          },
          "CreatedBeforeDate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionEMAIL": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "CC": {
            "type": "string",
            "nullable": true
          },
          "BCC": {
            "type": "string",
            "nullable": true
          },
          "From": {
            "type": "string",
            "nullable": true
          },
          "To": {
            "type": "string",
            "nullable": true
          },
          "Subject": {
            "type": "string",
            "nullable": true
          },
          "Body": {
            "type": "string",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionINET": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "SiteParams": {
            "type": "string",
            "nullable": true
          },
          "SourceDir": {
            "type": "string",
            "nullable": true
          },
          "SourceName": {
            "type": "string",
            "nullable": true
          },
          "DestDir": {
            "type": "string",
            "nullable": true
          },
          "DestName": {
            "type": "string",
            "nullable": true
          },
          "Recurse": {
            "type": "boolean"
          },
          "IsPush": {
            "type": "boolean"
          },
          "DeleteSourceAfterTransfer": {
            "type": "boolean"
          },
          "DisconnectAfterTransfer": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionKICKUSER": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "Username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionLOG": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "FilePath": {
            "type": "string",
            "nullable": true
          },
          "AsciiLogFile": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionNOTIFY": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionPCISCAN": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "RunReport": {
            "type": "boolean"
          },
          "OutFileName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionPGP": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "SourcePathAndName": {
            "type": "string",
            "nullable": true
          },
          "TargetPathAndName": {
            "type": "string",
            "nullable": true
          },
          "Overwrite": {
            "type": "boolean"
          },
          "AsciiArmor": {
            "type": "boolean"
          },
          "CompressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "Encrypting": {
            "type": "boolean"
          },
          "Config": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionRUNREPORT": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "ReportGUID": {
            "type": "string",
            "format": "uuid"
          },
          "OutputPathAndName": {
            "type": "string",
            "nullable": true
          },
          "OutputFormat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionSPAWN": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "CmdFilePathAndName": {
            "type": "string",
            "nullable": true
          },
          "QuoteParams": {
            "type": "boolean"
          },
          "QuoteChar": {
            "type": "string",
            "nullable": true
          },
          "DumpToLog": {
            "type": "boolean"
          },
          "WorkingDirectory": {
            "type": "string",
            "nullable": true
          },
          "UseShellExecute": {
            "type": "boolean"
          },
          "Creds": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCredentials"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaActionZIP": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Params": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Wait": {
            "type": "boolean"
          },
          "WaitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "WaitAbort": {
            "type": "boolean"
          },
          "BreakOnError": {
            "type": "boolean"
          },
          "ZipFilePathAndName": {
            "type": "string",
            "nullable": true
          },
          "TargetPath": {
            "type": "string",
            "nullable": true
          },
          "Overwrite": {
            "type": "boolean"
          },
          "KeepPath": {
            "type": "boolean"
          },
          "CompressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "Recurse": {
            "type": "boolean"
          },
          "VfsFileList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiFileInfo"
            },
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "nullable": true
          },
          "Config": {
            "type": "string",
            "nullable": true
          },
          "Zipping": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaBase": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionBase": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionCONNTIME": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "Interval": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaConditionInterval"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionCXNTYPE": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "ConnectionTypes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionELAPTIME": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "FirstExecution": {
            "type": "integer",
            "format": "int64"
          },
          "Interval": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaConditionInterval"
          },
          "LastExecution": {
            "type": "integer",
            "format": "int64"
          },
          "Frequency": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionEXPDATE": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "AcctExpirationInterval": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaConditionInterval"
          },
          "AcctExpirationDate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionFILEDIR": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "IncludeSubdirectories": {
            "type": "boolean"
          },
          "Items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionFILESIZE": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "Operator": {
            "type": "string",
            "nullable": true
          },
          "FileSize": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionIDLETIME": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "Interval": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaConditionInterval"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionIP": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "Addresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionInterval": {
        "type": "object",
        "properties": {
          "Days": {
            "type": "integer",
            "format": "int32"
          },
          "Hours": {
            "type": "integer",
            "format": "int32"
          },
          "Minutes": {
            "type": "integer",
            "format": "int32"
          },
          "Seconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Used to define an Interval for something, like a scheduled event"
      },
      "Srt.Api.Models.ApiEcaConditionLOGINS": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "FailedLoginAttempts": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionNODES": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "Nodes": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionREGEXP": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "RegExp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaConditionREGEXPData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionREGEXPData": {
        "type": "object",
        "properties": {
          "Variable": {
            "type": "string",
            "nullable": true
          },
          "Operator": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaConditionUSERENABLED": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "IsNotCondition": {
            "type": "boolean"
          },
          "UserList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "UserEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaData": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Desc": {
            "type": "string",
            "nullable": true
          },
          "EventType": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaEventBase"
            },
            "nullable": true
          },
          "Actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaActionBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEcaEventBase": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Enabled": {
            "type": "boolean"
          },
          "Conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaConditionBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiErrorInfo": {
        "type": "object",
        "properties": {
          "ErrorCode": {
            "type": "integer",
            "description": "Holds our ApiError code",
            "format": "int32"
          },
          "ErrorStr": {
            "type": "string",
            "description": "The error string for the current ErrorCode",
            "nullable": true
          },
          "SubErrorCode": {
            "type": "integer",
            "description": "Any OS level error code",
            "format": "int32"
          },
          "SubErrorStr": {
            "type": "string",
            "description": "OS level error string for SubErrorCode",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contains error information"
      },
      "Srt.Api.Models.ApiEventHandler": {
        "type": "object",
        "properties": {
          "ServerGUID": {
            "type": "string",
            "format": "uuid"
          },
          "EventGUID": {
            "type": "string",
            "format": "uuid"
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          },
          "ECAData": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiEcaData"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEventHandlerActionTree": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandlerActionTree"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEventHandlerConditionMeta": {
        "type": "object",
        "properties": {
          "Commands": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ReturnCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ConnectionTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEventHandlerConditionTree": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandlerConditionTree"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEventHandlerEventTree": {
        "type": "object",
        "properties": {
          "_type": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "Children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandlerEventTree"
            },
            "nullable": true
          },
          "ConditionIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiEventHandlers": {
        "type": "object",
        "properties": {
          "EventHandlers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiEventHandler"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiFileDeleteRequest": {
        "type": "object",
        "properties": {
          "Files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiFileDirectoryCreateRequest": {
        "type": "object",
        "properties": {
          "ParentFolderId": {
            "type": "string",
            "nullable": true
          },
          "FolderName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiFileInfo": {
        "type": "object",
        "properties": {
          "UniqueID": {
            "type": "string",
            "nullable": true
          },
          "Attributes": {
            "type": "integer",
            "format": "int32"
          },
          "FileName": {
            "type": "string",
            "nullable": true
          },
          "ACL": {
            "type": "string",
            "nullable": true
          },
          "CreationTimeUtc": {
            "type": "integer",
            "format": "int64"
          },
          "LastAccessTimeUtc": {
            "type": "integer",
            "format": "int64"
          },
          "LastWriteTimeUtc": {
            "type": "integer",
            "format": "int64"
          },
          "FileSizeFMT": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Length": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiFileListRequest": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string",
            "nullable": true
          },
          "ListType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiFileListType"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiFileListResponse": {
        "type": "object",
        "properties": {
          "Files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiFileInfo"
            },
            "nullable": true
          },
          "BytesInUse": {
            "type": "string",
            "nullable": true
          },
          "QuotaLimit": {
            "type": "string",
            "nullable": true
          },
          "DirectoryPermissions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiFileListType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.ApiGlobals": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupExecResponse": {
        "type": "object",
        "properties": {
          "Vars": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Poco": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
          },
          "Groups": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupList"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupInfo": {
        "type": "object",
        "properties": {
          "GroupGUID": {
            "type": "string",
            "nullable": true
          },
          "AuthGUID": {
            "type": "string",
            "nullable": true
          },
          "GroupName": {
            "type": "string",
            "nullable": true
          },
          "GroupDesc": {
            "type": "string",
            "nullable": true
          },
          "GroupHomeDirEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "GroupHomeDir": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupInfoBase": {
        "type": "object",
        "properties": {
          "GroupGUID": {
            "type": "string",
            "nullable": true
          },
          "AuthGUID": {
            "type": "string",
            "nullable": true
          },
          "GroupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupList": {
        "type": "object",
        "properties": {
          "GroupList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API class containing a list of groups"
      },
      "Srt.Api.Models.ApiGroupParamsAVPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuarAction": {
            "type": "integer",
            "format": "int32"
          },
          "RealTime": {
            "type": "integer",
            "format": "int32"
          },
          "Timeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsAcctPoco": {
        "type": "object",
        "properties": {
          "AlwaysAllowLogin": {
            "type": "integer",
            "format": "int32"
          },
          "KickDisabledUsers": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPass": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPassCnt": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctNotifyUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctKickUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctBanIP": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryCnt": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationCnt": {
            "type": "integer",
            "format": "int64"
          },
          "CanChangePassword": {
            "type": "integer",
            "format": "int32"
          },
          "ForceComplexPassword": {
            "type": "integer",
            "format": "int32"
          },
          "ComplexPasswordRules": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiComplexPasswordRulesPoco"
          },
          "AcctExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationCnt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsBrandPoco": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsCxnPoco": {
        "type": "object",
        "properties": {
          "IdleTimeoutEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "IdleTimeoutCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumCnt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsDavPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsFileDirPoco": {
        "type": "object",
        "properties": {
          "BanFileTypesEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "BanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "AutoBanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "HideInaccessibleDirs": {
            "type": "integer",
            "format": "int32"
          },
          "SecureFileDelete": {
            "type": "integer",
            "format": "int32"
          },
          "DelPartFiles": {
            "type": "integer",
            "format": "int32"
          },
          "DelMetaWithFiles": {
            "type": "integer",
            "format": "int32"
          },
          "ShowHiddenFiles": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheSizeMB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsFtpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneAdjust": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZLevel": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMDTM": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFCT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFMT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowNullCWD": {
            "type": "integer",
            "format": "int32"
          },
          "BlockAntiTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "NlstReturnsDirs": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsFtpsPoco": {
        "type": "object",
        "properties": {
          "ExplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ImplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPROT": {
            "type": "integer",
            "format": "int32"
          },
          "FipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DefaultPROTP": {
            "type": "integer",
            "format": "int32"
          },
          "RequireFtps": {
            "type": "integer",
            "format": "int32"
          },
          "AllowCCC": {
            "type": "integer",
            "format": "int32"
          },
          "RequireCerts": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsGeneralPoco": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "GroupDesc": {
            "type": "string",
            "nullable": true
          },
          "GroupHomeDirEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "GroupHomeDir": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsHttpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsIpAccessRulesPoco": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsPgpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AddPgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "HidePgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "ExemptFiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "UseEvents": {
            "type": "integer",
            "format": "int32"
          },
          "RetainFileSize": {
            "type": "integer",
            "format": "int32"
          },
          "PgpKeyGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsPoco": {
        "type": "object",
        "properties": {
          "GroupGUID": {
            "type": "string",
            "nullable": true
          },
          "AuthGUID": {
            "type": "string",
            "nullable": true
          },
          "GroupName": {
            "type": "string",
            "nullable": true
          },
          "General": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsGeneralPoco"
          },
          "Acct": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsAcctPoco"
          },
          "AV": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsAVPoco"
          },
          "Brand": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsBrandPoco"
          },
          "Cxn": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsCxnPoco"
          },
          "Dav": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsDavPoco"
          },
          "Sfs": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsSfsPoco"
          },
          "FileDir": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsFileDirPoco"
          },
          "Ftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsFtpPoco"
          },
          "Ftps": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsFtpsPoco"
          },
          "Http": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsHttpPoco"
          },
          "IpAccessRules": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsIpAccessRulesPoco"
          },
          "Pgp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPgpPoco"
          },
          "Quota": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsQuotaPoco"
          },
          "Role": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsRolePoco"
          },
          "RoleParams": {
            "type": "string",
            "nullable": true
          },
          "Ssh": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsSshPoco"
          },
          "Sftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsSftpPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsQuotaPoco": {
        "type": "object",
        "properties": {
          "QuotaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaCntKB": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaFreeFileList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsRolePoco": {
        "type": "object",
        "properties": {
          "IsRoleStandard": {
            "type": "integer",
            "format": "int32"
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsSfsPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AdHocEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QSEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QLAuthRequired": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpire": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpireVal": {
            "type": "integer",
            "format": "int64"
          },
          "ViewableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsSftpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupParamsSshPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPubKeyAuth": {
            "type": "integer",
            "format": "int32"
          },
          "KickOnBadHostKey": {
            "type": "integer",
            "format": "int32"
          },
          "MfaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MfaMode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiGroupSshPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AdHocEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QSEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QLAuthRequired": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpire": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpireVal": {
            "type": "integer",
            "format": "int64"
          },
          "ViewableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiHostExPoco": {
        "type": "object",
        "properties": {
          "Host": {
            "type": "string",
            "description": "The Host name or IP address for the endpoint",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "The port number for the endpoint",
            "format": "int32"
          },
          "Enabled": {
            "type": "integer",
            "description": "Flag to indicate if the host is enabled",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "this version adds an Enabled flag to the data. We will\r\nbe using this in the Node stuff"
      },
      "Srt.Api.Models.ApiHostPoco": {
        "type": "object",
        "properties": {
          "Host": {
            "type": "string",
            "description": "The Host name or IP address for the endpoint",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "The port number for the endpoint",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Defines the host name and port for a tcp endpoint"
      },
      "Srt.Api.Models.ApiIPBan": {
        "type": "object",
        "properties": {
          "ServerGUID": {
            "type": "string",
            "format": "uuid"
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          },
          "IpAddress": {
            "type": "string",
            "nullable": true
          },
          "StartTimeUTC": {
            "type": "integer",
            "format": "int64"
          },
          "EndTimeUTC": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiIPBanInfo": {
        "type": "object",
        "properties": {
          "IPBans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiIPBan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiIpAccessRulePoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "IpAccRuleGUID": {
            "type": "string",
            "format": "uuid"
          },
          "IPAddressStart": {
            "type": "string",
            "nullable": true
          },
          "IPAddressEnd": {
            "type": "string",
            "nullable": true
          },
          "Protocols": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "Allow": {
            "type": "integer",
            "format": "int32"
          },
          "Duration": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiIpAddressList": {
        "type": "object",
        "properties": {
          "IpAddresses": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiKeyAlg": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiKeyConst": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiKeyData": {
        "type": "object",
        "properties": {
          "KeyType": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PubKey": {
            "type": "string",
            "nullable": true
          },
          "PrvKey": {
            "type": "string",
            "nullable": true
          },
          "KeyBlob": {
            "type": "string",
            "nullable": true
          },
          "KeyAlg": {
            "type": "string",
            "nullable": true
          },
          "KeyLen": {
            "type": "integer",
            "format": "int32"
          },
          "SigMd5": {
            "type": "string",
            "nullable": true
          },
          "SigSha1": {
            "type": "string",
            "nullable": true
          },
          "SigSha256": {
            "type": "string",
            "nullable": true
          },
          "KeyCreds": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCredentials"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiLicenseEntitlements": {
        "type": "object",
        "properties": {
          "FileSharing": {
            "type": "boolean"
          },
          "FIPS": {
            "type": "boolean"
          },
          "Encryption": {
            "type": "boolean"
          },
          "Antivirus": {
            "type": "boolean"
          },
          "NativeAuthentication": {
            "type": "boolean"
          },
          "LDAPAuthentication": {
            "type": "boolean"
          },
          "NTSAMAuthentication": {
            "type": "boolean"
          },
          "ADSIAuthentication": {
            "type": "boolean"
          },
          "Clustering": {
            "type": "boolean"
          },
          "WebDAV": {
            "type": "boolean"
          },
          "SFTP": {
            "type": "boolean"
          },
          "WebUI": {
            "type": "boolean"
          },
          "Reporting": {
            "type": "boolean"
          },
          "WebDriveManagement": {
            "type": "boolean"
          },
          "DmzClient": {
            "type": "boolean"
          },
          "FTP": {
            "type": "boolean"
          },
          "ProfessionalEdition": {
            "type": "boolean"
          },
          "EnterpriseEdition": {
            "type": "boolean"
          },
          "EnterprisePlusEdition": {
            "type": "boolean"
          },
          "CloudEdition": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiLicenseInfo": {
        "type": "object",
        "properties": {
          "ProductId": {
            "type": "integer",
            "format": "int32"
          },
          "ProductName": {
            "type": "string",
            "nullable": true
          },
          "LicenseId": {
            "type": "integer",
            "format": "int32"
          },
          "LicenseName": {
            "type": "string",
            "nullable": true
          },
          "RegistrationDate": {
            "type": "integer",
            "format": "int64"
          },
          "ExpirationDate": {
            "type": "integer",
            "format": "int64"
          },
          "MonthsValid": {
            "type": "integer",
            "format": "int32"
          },
          "LicVerMaj": {
            "type": "integer",
            "format": "int32"
          },
          "LicVerMin": {
            "type": "integer",
            "format": "int32"
          },
          "LicVerPatch": {
            "type": "integer",
            "format": "int32"
          },
          "ChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "SaleType": {
            "type": "string"
          },
          "SequenceNum": {
            "type": "integer",
            "format": "int32"
          },
          "RegCode": {
            "type": "string",
            "nullable": true
          },
          "ActState": {
            "type": "integer",
            "format": "int32"
          },
          "IsActivated": {
            "type": "boolean"
          },
          "IsTrial": {
            "type": "boolean",
            "readOnly": true
          },
          "RegistrationDateEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ExpirationDateTimeEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "ExpirationDaysEx": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "ActStateEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LicenseTypeEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LicenseStatusEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LicenseTypeStatusEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiLicenseInfoEx": {
        "type": "object",
        "properties": {
          "IsTitanServer": {
            "type": "boolean"
          },
          "IsCornerstoneServer": {
            "type": "boolean"
          },
          "IsDMZEdgeServer": {
            "type": "boolean"
          },
          "IsMcmServer": {
            "type": "boolean"
          },
          "IsIcapServer": {
            "type": "boolean"
          },
          "IsSysLogServer": {
            "type": "boolean"
          },
          "LicenseIsValid": {
            "type": "boolean"
          },
          "LicenseIsTrial": {
            "type": "boolean"
          },
          "TrialDaysRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "MaintenanceExpirationDate": {
            "type": "integer",
            "format": "int64"
          },
          "ProductEdition": {
            "type": "string",
            "nullable": true
          },
          "LastActivationTime": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadCookie": {
            "nullable": true
          },
          "RegCodeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiLicenseList": {
        "type": "object",
        "properties": {
          "Licenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiLicenseInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiMsgPocoMsg": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "Text": {
            "type": "string",
            "nullable": true
          },
          "AltText": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Protocols": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiMultiTenancyPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "HostName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiNodeHostPoco": {
        "type": "object",
        "properties": {
          "LanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "TlsLanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiPciVersions": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiPgpKeyData": {
        "type": "object",
        "properties": {
          "KeyType": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PubKey": {
            "type": "string",
            "nullable": true
          },
          "PrvKey": {
            "type": "string",
            "nullable": true
          },
          "KeyBlob": {
            "type": "string",
            "nullable": true
          },
          "KeyAlg": {
            "type": "string",
            "nullable": true
          },
          "KeyLen": {
            "type": "integer",
            "format": "int32"
          },
          "SigMd5": {
            "type": "string",
            "nullable": true
          },
          "SigSha1": {
            "type": "string",
            "nullable": true
          },
          "SigSha256": {
            "type": "string",
            "nullable": true
          },
          "KeyCreds": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCredentials"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiPgpKeyExport": {
        "type": "object",
        "properties": {
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          },
          "ExportType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiPgpKeyImport": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "KeyData": {
            "type": "string",
            "nullable": true
          },
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiPgpKeyInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "UserGroupGUID": {
            "type": "string",
            "nullable": true
          },
          "Document": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyData"
          },
          "Fingerprint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiPgpKeyList": {
        "type": "object",
        "properties": {
          "Keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiPgpKeyInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiProductInfo": {
        "type": "object",
        "properties": {
          "VerString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "VerMaj": {
            "type": "integer",
            "format": "int32"
          },
          "VerMin": {
            "type": "integer",
            "format": "int32"
          },
          "VerPatch": {
            "type": "integer",
            "format": "int32"
          },
          "VerBuild": {
            "type": "integer",
            "format": "int32"
          },
          "ReleaseDate": {
            "type": "integer",
            "format": "int64"
          },
          "IsBeta": {
            "type": "boolean"
          },
          "RelNotesUrl": {
            "type": "string",
            "nullable": true
          },
          "Win64Url": {
            "type": "string",
            "nullable": true
          },
          "Linux64Url": {
            "type": "string",
            "nullable": true
          },
          "ReleaseDateEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "LongName": {
            "type": "string",
            "nullable": true
          },
          "ShortName": {
            "type": "string",
            "nullable": true
          },
          "DisplayName": {
            "type": "string",
            "nullable": true
          },
          "ProductId": {
            "type": "integer",
            "format": "int32"
          },
          "Updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiProductReleaseInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiProductReleaseInfo": {
        "type": "object",
        "properties": {
          "VerString": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "VerMaj": {
            "type": "integer",
            "format": "int32"
          },
          "VerMin": {
            "type": "integer",
            "format": "int32"
          },
          "VerPatch": {
            "type": "integer",
            "format": "int32"
          },
          "VerBuild": {
            "type": "integer",
            "format": "int32"
          },
          "ReleaseDate": {
            "type": "integer",
            "format": "int64"
          },
          "IsBeta": {
            "type": "boolean"
          },
          "RelNotesUrl": {
            "type": "string",
            "nullable": true
          },
          "Win64Url": {
            "type": "string",
            "nullable": true
          },
          "Linux64Url": {
            "type": "string",
            "nullable": true
          },
          "ReleaseDateEx": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiQuotaInfo": {
        "type": "object",
        "properties": {
          "CurrentUsage": {
            "type": "integer",
            "format": "int64"
          },
          "CurrentUsageFMT": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiReportDocument": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "integer",
            "format": "int32"
          },
          "RepxData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiRequestPayload": {
        "type": "object",
        "properties": {
          "Requests": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The class defines optional data which may be sent to an endpoint as\r\nadditional input for an api request\r\nMay contain an optional set of case-insensitive tag-value pairs\r\nfor the call. An example would be the nxcli may send an optional\r\n/Foo=Bar /Foo1=Bar1 ... /Foo29=BaR29"
      },
      "Srt.Api.Models.ApiResult": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The main object to be returned from the endpoint\r\nto the client. The Result property will have any error information and\r\nthe Response property will vary based on the endpoint and will contain\r\njson formatted response data for the request\r\n\r\nIn general this class will be converted to a strongly typed class where\r\nthe Response field will be typed to whatever information is being returned.\r\nThis is done so that generated API's will have knowledge of the pocos"
      },
      "Srt.Api.Models.ApiResultBase": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "All results returned by REST API will be based on this class and each \r\nspecified end point will derive from this base and add a \"Response\" member\r\nwhich is strongly typed."
      },
      "Srt.Api.Models.ApiResultGroupList": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupList"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultGroupParamsPoco": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiGroupParamsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultLogin": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthResponse"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultQuotaInfo": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiQuotaInfo"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultServerExecResponse": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerExecResponse"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultServerInfo": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerInfo"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultServerList": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerListResponse"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultServerParamsPoco": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultServerStateResponse": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStateResponse"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultServerVarsPoco": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerVarsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultUserActionResponse": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserActionResponse"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultUserExecResponse": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserExecResponse"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultUserList": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserList"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiResultUserParamsPoco": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "ResponseType": {
            "type": "string",
            "nullable": true
          },
          "Response": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerActivityDmz": {
        "type": "object",
        "properties": {
          "AutoRefresh": {
            "type": "integer",
            "format": "int32"
          },
          "AutoRefreshInterval": {
            "type": "integer",
            "format": "int32"
          },
          "ConnectionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerActivityDmzConnection"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerActivityDmzConnection": {
        "type": "object",
        "properties": {
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerGUID": {
            "type": "string",
            "nullable": true
          },
          "Received": {
            "type": "integer",
            "format": "int64"
          },
          "Sent": {
            "type": "integer",
            "format": "int64"
          },
          "Port": {
            "type": "integer",
            "format": "int32"
          },
          "NumConnections": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerAuthConnectorList": {
        "type": "object",
        "properties": {
          "Auth": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerClusterParamsPoco": {
        "type": "object",
        "properties": {
          "ClusteredIPAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerCreateRequest": {
        "type": "object",
        "properties": {
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "General": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsGeneralPoco"
          },
          "SqlParams": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUtilSqlParamsPoco"
          },
          "ClusterParams": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerClusterParamsPoco"
          },
          "FolderParams": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsFolderPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerExecResponse": {
        "type": "object",
        "properties": {
          "Vars": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Poco": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerInfo": {
        "type": "object",
        "properties": {
          "DomainGUID": {
            "type": "string",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerNodeGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerNodeName": {
            "type": "string",
            "nullable": true
          },
          "ServerDesc": {
            "type": "string",
            "nullable": true
          },
          "RunAtStartup": {
            "type": "integer",
            "format": "int32"
          },
          "ServerStats": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerStats"
          },
          "IsRunning": {
            "type": "integer",
            "format": "int32"
          },
          "FtpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "FtpsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "SshEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "SftpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "HttpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "HttpsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DavEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DavsEnabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerInfoBase": {
        "type": "object",
        "properties": {
          "DomainGUID": {
            "type": "string",
            "nullable": true
          },
          "DomNodeGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerNodeGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerNodeName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerListResponse": {
        "type": "object",
        "properties": {
          "ServerList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerNodeList": {
        "type": "object",
        "properties": {
          "Nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsAVPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuarAction": {
            "type": "integer",
            "format": "int32"
          },
          "RealTime": {
            "type": "integer",
            "format": "int32"
          },
          "Timeout": {
            "type": "integer",
            "format": "int32"
          },
          "EngineType": {
            "type": "integer",
            "description": "AV/ICAP Engine Id. 0 = Internal, 1 = CloudEmersive",
            "format": "int32"
          },
          "ICapPort": {
            "type": "string",
            "description": "TCP/IP Port for connecting to the AV/ICAP server. The default port is 1344",
            "nullable": true
          },
          "ICapURL": {
            "type": "string",
            "description": "Fully qualified Endpoint URL for the remote AV/ICAP Server",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AntiVirus-ICAP Settings"
      },
      "Srt.Api.Models.ApiServerParamsAcctPoco": {
        "type": "object",
        "properties": {
          "AlwaysAllowLogin": {
            "type": "integer",
            "format": "int32"
          },
          "KickDisabledUsers": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPass": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPassCnt": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctNotifyUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctKickUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctBanIP": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryCnt": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationCnt": {
            "type": "integer",
            "format": "int64"
          },
          "CanChangePassword": {
            "type": "integer",
            "format": "int32"
          },
          "ForceComplexPassword": {
            "type": "integer",
            "format": "int32"
          },
          "ComplexPasswordRules": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiComplexPasswordRulesPoco"
          },
          "AcctExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationCnt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsAuthPoco": {
        "type": "object",
        "properties": {
          "AuthConfig": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiAuthDataPoco"
          },
          "AuthDesc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsBrandPoco": {
        "type": "object",
        "properties": {
          "ActiveBrandGUID": {
            "type": "string",
            "nullable": true
          },
          "ActiveThemeGUID": {
            "type": "string",
            "nullable": true
          },
          "Brands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiBrandPocoData"
            },
            "nullable": true
          },
          "Themes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiThemePocoData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsCloudFolderPoco": {
        "type": "object",
        "properties": {
          "CloudGUID": {
            "type": "string",
            "nullable": true
          },
          "CloudName": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ConnectorName": {
            "type": "string",
            "nullable": true
          },
          "ServerUrl": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "ServerPortEnable": {
            "type": "boolean"
          },
          "ServerPortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "AccessToken": {
            "type": "string",
            "nullable": true
          },
          "RefreshToken": {
            "type": "string",
            "nullable": true
          },
          "SharePointSites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudSharePointSite"
            },
            "nullable": true
          },
          "AccessKey": {
            "type": "string",
            "nullable": true
          },
          "SecretKey": {
            "type": "string",
            "nullable": true
          },
          "BucketList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "BucketRegion": {
            "type": "string",
            "nullable": true
          },
          "ConnectorConfig": {
            "type": "string",
            "nullable": true
          },
          "CustomSettings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsCxnPoco": {
        "type": "object",
        "properties": {
          "IdleTimeoutEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "IdleTimeoutCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumCnt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsDavPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "LanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "Ipv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "BasicAuthEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DigestAuthEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsLanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "TlsFipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsRequireCerts": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "string",
            "format": "uuid"
          },
          "TlsIpv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsBasicAuthEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsDigestAuthEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsVersions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsDmzPoco": {
        "type": "object",
        "properties": {
          "DmzGUID": {
            "type": "string",
            "format": "uuid"
          },
          "DmzName": {
            "type": "string",
            "nullable": true
          },
          "DmzEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DmzHost": {
            "type": "string",
            "nullable": true
          },
          "FtpWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "FtpsWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "SshWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "HttpWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "HttpsWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "DavWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          },
          "DavsWanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostExPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsDmzSvrPoco": {
        "type": "object",
        "properties": {
          "PublicHostAddress": {
            "type": "string",
            "nullable": true
          },
          "PrivateHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsEmailPoco": {
        "type": "object",
        "properties": {
          "EmailServerHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "EmailDefFromAddr": {
            "type": "string",
            "nullable": true
          },
          "EmailUsername": {
            "type": "string",
            "nullable": true
          },
          "EmailPassword": {
            "type": "string",
            "nullable": true
          },
          "EmailServerSecure": {
            "type": "integer",
            "format": "int32"
          },
          "SmsPoco": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsSmsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsFileDirPoco": {
        "type": "object",
        "properties": {
          "BanFileTypesEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "BanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "AutoBanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "HideInaccessibleDirs": {
            "type": "integer",
            "format": "int32"
          },
          "SecureFileDelete": {
            "type": "integer",
            "format": "int32"
          },
          "DelPartFiles": {
            "type": "integer",
            "format": "int32"
          },
          "DelMetaWithFiles": {
            "type": "integer",
            "format": "int32"
          },
          "ShowHiddenFiles": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheSizeMB": {
            "type": "integer",
            "format": "int32"
          },
          "FileCase": {
            "type": "integer",
            "format": "int32"
          },
          "FolderCase": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsFolderPoco": {
        "type": "object",
        "properties": {
          "BackupsDir": {
            "type": "string",
            "nullable": true
          },
          "BaseDataDir": {
            "type": "string",
            "nullable": true
          },
          "BaseLogDir": {
            "type": "string",
            "nullable": true
          },
          "DatabaseDir": {
            "type": "string",
            "nullable": true
          },
          "ReportsDir": {
            "type": "string",
            "nullable": true
          },
          "TempDataDir": {
            "type": "string",
            "nullable": true
          },
          "UserDataDir": {
            "type": "string",
            "nullable": true
          },
          "QuickSendDataDir": {
            "type": "string",
            "nullable": true
          },
          "AVQuarantineDir": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsFtpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneAdjust": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZLevel": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPASV": {
            "type": "integer",
            "format": "int32"
          },
          "AllowEPSV": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMDTM": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFCT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFMT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowNullCWD": {
            "type": "integer",
            "format": "int32"
          },
          "BlockAntiTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "NlstReturnsDirs": {
            "type": "integer",
            "format": "int32"
          },
          "StouExtension": {
            "type": "string",
            "nullable": true
          },
          "StouPrefix": {
            "type": "string",
            "nullable": true
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "Ipv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "LanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "UseRouterHost": {
            "type": "integer",
            "format": "int32"
          },
          "RouterHost": {
            "type": "string",
            "nullable": true
          },
          "PasvUseLocalIP": {
            "type": "integer",
            "format": "int32"
          },
          "PasvUseLocalIPMask": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "LimitPasvPort": {
            "type": "integer",
            "format": "int32"
          },
          "PasvPortEnd": {
            "type": "integer",
            "format": "int32"
          },
          "PasvPortStart": {
            "type": "integer",
            "format": "int32"
          },
          "PasvTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "MtsHostName": {
            "type": "string",
            "nullable": true
          },
          "MtsMode": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsFtpsPoco": {
        "type": "object",
        "properties": {
          "ExplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ImplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "Ipv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPROT": {
            "type": "integer",
            "format": "int32"
          },
          "FipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DefaultPROTP": {
            "type": "integer",
            "format": "int32"
          },
          "RequireFtps": {
            "type": "integer",
            "format": "int32"
          },
          "AllowCCC": {
            "type": "integer",
            "format": "int32"
          },
          "RequireCerts": {
            "type": "integer",
            "format": "int32"
          },
          "LanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "TlsCertGUID": {
            "type": "string",
            "format": "uuid"
          },
          "TlsVersions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsGeneralPoco": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "ServerDesc": {
            "type": "string",
            "nullable": true
          },
          "RunAtStartup": {
            "type": "integer",
            "format": "int32"
          },
          "ShowEULA": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsHttpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "LanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "Redirect301": {
            "type": "integer",
            "format": "int32"
          },
          "WanHostName": {
            "type": "string",
            "nullable": true
          },
          "NoAutoComplete": {
            "type": "integer",
            "format": "int32"
          },
          "Ipv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsLanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "TlsFipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsRequireCerts": {
            "type": "integer",
            "format": "int32"
          },
          "TlsIpv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "string",
            "format": "uuid"
          },
          "TlsVersions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsIcapSvrPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsIpAccessPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "DenyByDefault": {
            "type": "integer",
            "format": "int32"
          },
          "IpAccessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiIpAccessRulePoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsIpAccessRulesPoco": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsIpSecurityPoco": {
        "type": "object",
        "properties": {
          "FloodProtEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "FloodProtInterval": {
            "type": "integer",
            "format": "int32"
          },
          "FloodProtValue": {
            "type": "integer",
            "format": "int32"
          },
          "FloodBanTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "HackProtEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "HackProtInterval": {
            "type": "integer",
            "format": "int32"
          },
          "HackProtValue": {
            "type": "integer",
            "format": "int32"
          },
          "HackBanTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsLogPoco": {
        "type": "object",
        "properties": {
          "EnableLogToFile": {
            "type": "integer",
            "format": "int32"
          },
          "EnableSysLogServer": {
            "type": "integer",
            "format": "int32"
          },
          "SysLogServerHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "LogNameUsePrefix": {
            "type": "integer",
            "format": "int32"
          },
          "LogUnicodeFormat": {
            "type": "integer",
            "format": "int32"
          },
          "LogFormat": {
            "type": "integer",
            "format": "int32"
          },
          "LogLevel": {
            "type": "integer",
            "format": "int32"
          },
          "LogFieldsText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "LogFieldsW3C": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "LogMaxSizeMB": {
            "type": "integer",
            "format": "int32"
          },
          "LogRotation": {
            "type": "integer",
            "format": "int32"
          },
          "LogRotationCheckInterval": {
            "type": "integer",
            "format": "int32"
          },
          "LogWrap": {
            "type": "integer",
            "format": "int32"
          },
          "LogWrapLength": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsMsgPoco": {
        "type": "object",
        "properties": {
          "Msgs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiMsgPocoMsg"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsMulTenPoco": {
        "type": "object",
        "properties": {
          "Sftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiMultiTenancyPoco"
          },
          "Dav": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiMultiTenancyPoco"
          },
          "Davs": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiMultiTenancyPoco"
          },
          "Http": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiMultiTenancyPoco"
          },
          "Https": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiMultiTenancyPoco"
          },
          "MultiHomeMode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsNodesPoco": {
        "type": "object",
        "properties": {
          "ServerNodeGUID": {
            "type": "string",
            "nullable": true
          },
          "ServerNodeName": {
            "type": "string",
            "nullable": true
          },
          "NodeType": {
            "type": "integer",
            "format": "int32"
          },
          "NodePriority": {
            "type": "integer",
            "format": "int32"
          },
          "DmzList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsDmzPoco"
            },
            "nullable": true
          },
          "Ftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiNodeHostPoco"
          },
          "Http": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiNodeHostPoco"
          },
          "Ssh": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiNodeHostPoco"
          },
          "Dav": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiNodeHostPoco"
          },
          "SLSvr": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiNodeHostPoco"
          },
          "IcapSvr": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiNodeHostPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsPciPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "Version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsPgpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AddPgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "HidePgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "ExemptFiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "UseEvents": {
            "type": "integer",
            "format": "int32"
          },
          "RetainFileSize": {
            "type": "integer",
            "format": "int32"
          },
          "PgpKeyGUID": {
            "type": "string",
            "format": "uuid"
          },
          "PgpCipherAlg": {
            "type": "string",
            "nullable": true
          },
          "PgpCompressionAlg": {
            "type": "string",
            "nullable": true
          },
          "PgpSigAlg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsPoco": {
        "type": "object",
        "properties": {
          "ServerGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerNodeGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServerNodeName": {
            "type": "string",
            "nullable": true
          },
          "General": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsGeneralPoco"
          },
          "Nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsNodesPoco"
            },
            "nullable": true
          },
          "Unc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsUncPoco"
            },
            "nullable": true
          },
          "Auth": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAuthPoco"
            },
            "nullable": true
          },
          "Acct": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAcctPoco"
          },
          "AV": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsAVPoco"
          },
          "Brand": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsBrandPoco"
          },
          "Cxn": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsCxnPoco"
          },
          "Dmz": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsDmzPoco"
            },
            "nullable": true
          },
          "Email": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsEmailPoco"
          },
          "FileDir": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsFileDirPoco"
          },
          "Folder": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsFolderPoco"
          },
          "Ftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsFtpPoco"
          },
          "Ftps": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsFtpsPoco"
          },
          "Dav": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsDavPoco"
          },
          "Http": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsHttpPoco"
          },
          "IpAccess": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsIpAccessPoco"
          },
          "IpSecurity": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsIpSecurityPoco"
          },
          "Log": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsLogPoco"
          },
          "Msg": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsMsgPoco"
          },
          "MulTen": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsMulTenPoco"
          },
          "Pci": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPciPoco"
          },
          "Pgp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsPgpPoco"
          },
          "Quota": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsQuotaPoco"
          },
          "Role": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsRolePoco"
          },
          "Ssh": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsSshPoco"
          },
          "SLSvr": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsSLSvrPoco"
          },
          "IcapSvr": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsIcapSvrPoco"
          },
          "Sftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsSftpPoco"
          },
          "Stats": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsStatsPoco"
          },
          "DmzSvr": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsDmzSvrPoco"
          },
          "Sfs": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsSfsPoco"
          },
          "ClusterParams": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerClusterParamsPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsPocoBase": {
        "type": "object",
        "properties": {
          "ServerGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsQuotaPoco": {
        "type": "object",
        "properties": {
          "QuotaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaCntKB": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaFreeFileList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsRolePoco": {
        "type": "object",
        "properties": {
          "IsRoleStandard": {
            "type": "integer",
            "format": "int32"
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsSLSvrPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsSfsPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AdHocEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QSEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QLAuthRequired": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpire": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpireVal": {
            "type": "integer",
            "format": "int64"
          },
          "ViewableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsSftpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "SftpVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsSmsPoco": {
        "type": "object",
        "properties": {
          "Provider": {
            "type": "integer",
            "format": "int32"
          },
          "SourcePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ConnectEndpoint": {
            "type": "string",
            "nullable": true
          },
          "AccessKey": {
            "type": "string",
            "nullable": true
          },
          "TestPhoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsSshPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPubKeyAuth": {
            "type": "integer",
            "format": "int32"
          },
          "KickOnBadHostKey": {
            "type": "integer",
            "format": "int32"
          },
          "MfaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MfaMode": {
            "type": "integer",
            "format": "int32"
          },
          "LanHost": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiHostPoco"
          },
          "Ipv6Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "HostKeyGUID": {
            "type": "string",
            "format": "uuid"
          },
          "AllowPasswordAuth": {
            "type": "integer",
            "format": "int32"
          },
          "CipherList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "KexList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "MacList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "FipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "HandshakeTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "UseCompression": {
            "type": "integer",
            "format": "int32"
          },
          "CompressionLevel": {
            "type": "integer",
            "format": "int32"
          },
          "SSHWindowSizeKB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsStatsPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "RotationSchedule": {
            "type": "integer",
            "format": "int32"
          },
          "ArchiveBeforePrune": {
            "type": "integer",
            "format": "int32"
          },
          "LastArchiveDate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerParamsUncPoco": {
        "type": "object",
        "properties": {
          "UncGUID": {
            "type": "string",
            "format": "uuid"
          },
          "UncSharePath": {
            "type": "string",
            "nullable": true
          },
          "UNCReAuth": {
            "type": "integer",
            "format": "int32"
          },
          "BasicCreds": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCredentialsBasic"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerReport": {
        "type": "object",
        "properties": {
          "ReportGUID": {
            "type": "string",
            "format": "uuid"
          },
          "OwnerGUID": {
            "type": "string",
            "format": "uuid"
          },
          "Document": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiReportDocument"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerReportCreate": {
        "type": "object",
        "properties": {
          "ServerGUID": {
            "type": "string",
            "format": "uuid"
          },
          "Report": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiServerReport"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerReportList": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerStateRequest": {
        "type": "object",
        "properties": {
          "Action": {
            "type": "string",
            "nullable": true
          },
          "ActionData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerStateResponse": {
        "type": "object",
        "properties": {
          "QuotaInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiQuotaInfo"
          },
          "ResponseData": {
            "nullable": true
          },
          "ResponseString": {
            "type": "string",
            "nullable": true
          },
          "ServerConfigBase64": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerStats": {
        "type": "object",
        "properties": {
          "StartTime": {
            "type": "integer",
            "format": "int64"
          },
          "UploadCount": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadCount": {
            "type": "integer",
            "format": "int64"
          },
          "UploadTime": {
            "type": "integer",
            "format": "int64"
          },
          "DownloadTime": {
            "type": "integer",
            "format": "int64"
          },
          "BytesInUse": {
            "type": "integer",
            "format": "int64"
          },
          "BytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "BytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "FileBytesReceived": {
            "type": "integer",
            "format": "int64"
          },
          "FileBytesSent": {
            "type": "integer",
            "format": "int64"
          },
          "IOReads": {
            "type": "integer",
            "format": "int64"
          },
          "IOWrites": {
            "type": "integer",
            "format": "int64"
          },
          "InvalidCommandCount": {
            "type": "integer",
            "format": "int64"
          },
          "RatioFileUp": {
            "type": "integer",
            "format": "int64"
          },
          "RatioFileDn": {
            "type": "integer",
            "format": "int64"
          },
          "RatioKBUp": {
            "type": "integer",
            "format": "int64"
          },
          "RatioKBDn": {
            "type": "integer",
            "format": "int64"
          },
          "FtpIsRunning": {
            "type": "boolean"
          },
          "FtpAddress": {
            "type": "string",
            "nullable": true
          },
          "FtpsIsRunning": {
            "type": "boolean"
          },
          "FtpsAddress": {
            "type": "string",
            "nullable": true
          },
          "SftpIsRunning": {
            "type": "boolean"
          },
          "SftpAddress": {
            "type": "string",
            "nullable": true
          },
          "DavIsRunning": {
            "type": "boolean"
          },
          "DavAddress": {
            "type": "string",
            "nullable": true
          },
          "DavsIsRunning": {
            "type": "boolean"
          },
          "DavsAddress": {
            "type": "string",
            "nullable": true
          },
          "WebIsRunning": {
            "type": "boolean"
          },
          "WebAddress": {
            "type": "string",
            "nullable": true
          },
          "WebsIsRunning": {
            "type": "boolean"
          },
          "WebsAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerUncList": {
        "type": "object",
        "properties": {
          "UncParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiServerParamsUncPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerUtilsResponse": {
        "type": "object",
        "properties": {
          "Vars": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiServerVarsPoco": {
        "type": "object",
        "properties": {
          "Vars": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSession": {
        "type": "object",
        "properties": {
          "BearerToken": {
            "type": "string",
            "description": "The bearer token generated by the server side endpoint",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The ApiSession class is returned from a Login and encapsulates\r\neverything the client needs to identify it's session with the\r\nremote endpoint."
      },
      "Srt.Api.Models.ApiSessionInfo": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "UserGuid": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "ClientIP": {
            "type": "string",
            "nullable": true
          },
          "SessionType": {
            "type": "string",
            "nullable": true
          },
          "LastCommand": {
            "type": "string",
            "nullable": true
          },
          "Protocol": {
            "type": "string",
            "nullable": true
          },
          "CreatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "IdleTimeMS": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSessionKickRequest": {
        "type": "object",
        "properties": {
          "KickSession": {
            "type": "boolean"
          },
          "KickUser": {
            "type": "boolean"
          },
          "DisableUser": {
            "type": "boolean"
          },
          "BanIP": {
            "type": "boolean"
          },
          "SessionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiSessionInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSessionParamsPoco": {
        "type": "object",
        "properties": {
          "AutoRefresh": {
            "type": "integer",
            "format": "int32"
          },
          "AutoRefreshInterval": {
            "type": "integer",
            "format": "int32"
          },
          "SessionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiSessionInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsAVPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuarAction": {
            "type": "integer",
            "format": "int32"
          },
          "RealTime": {
            "type": "integer",
            "format": "int32"
          },
          "Timeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsAcctPoco": {
        "type": "object",
        "properties": {
          "AlwaysAllowLogin": {
            "type": "integer",
            "format": "int32"
          },
          "KickDisabledUsers": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPass": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPassCnt": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctNotifyUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctKickUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctBanIP": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryCnt": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationCnt": {
            "type": "integer",
            "format": "int64"
          },
          "CanChangePassword": {
            "type": "integer",
            "format": "int32"
          },
          "ForceComplexPassword": {
            "type": "integer",
            "format": "int32"
          },
          "ComplexPasswordRules": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiComplexPasswordRulesPoco"
          },
          "AcctExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationCnt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsBrandPoco": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsCloudFolderPoco": {
        "type": "object",
        "properties": {
          "CloudGUID": {
            "type": "string",
            "nullable": true
          },
          "CloudName": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ConnectorName": {
            "type": "string",
            "nullable": true
          },
          "ServerUrl": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "ServerPortEnable": {
            "type": "boolean"
          },
          "ServerPortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "AccessToken": {
            "type": "string",
            "nullable": true
          },
          "RefreshToken": {
            "type": "string",
            "nullable": true
          },
          "SharePointSites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudSharePointSite"
            },
            "nullable": true
          },
          "AccessKey": {
            "type": "string",
            "nullable": true
          },
          "SecretKey": {
            "type": "string",
            "nullable": true
          },
          "BucketList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "BucketRegion": {
            "type": "string",
            "nullable": true
          },
          "ConnectorConfig": {
            "type": "string",
            "nullable": true
          },
          "CustomSettings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsCxnPoco": {
        "type": "object",
        "properties": {
          "IdleTimeoutEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "IdleTimeoutCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumCnt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsDavPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsFileDirPoco": {
        "type": "object",
        "properties": {
          "BanFileTypesEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "BanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "AutoBanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "HideInaccessibleDirs": {
            "type": "integer",
            "format": "int32"
          },
          "SecureFileDelete": {
            "type": "integer",
            "format": "int32"
          },
          "DelPartFiles": {
            "type": "integer",
            "format": "int32"
          },
          "DelMetaWithFiles": {
            "type": "integer",
            "format": "int32"
          },
          "ShowHiddenFiles": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheSizeMB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsFtpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneAdjust": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZLevel": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMDTM": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFCT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFMT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowNullCWD": {
            "type": "integer",
            "format": "int32"
          },
          "BlockAntiTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "NlstReturnsDirs": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsFtpsPoco": {
        "type": "object",
        "properties": {
          "ExplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ImplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPROT": {
            "type": "integer",
            "format": "int32"
          },
          "FipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DefaultPROTP": {
            "type": "integer",
            "format": "int32"
          },
          "RequireFtps": {
            "type": "integer",
            "format": "int32"
          },
          "AllowCCC": {
            "type": "integer",
            "format": "int32"
          },
          "RequireCerts": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsGeneralPoco": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsHttpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsIpAccessPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "DenyByDefault": {
            "type": "integer",
            "format": "int32"
          },
          "IpAccessRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiIpAccessRulePoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This class holds information about a single rule. Each rule will have an IP mask,\r\nwhich could be a range, mask or a single IP. It will also have a Protocol to\r\nwhich it applys, a mode of Allow or Deny and then a duration for which victims\r\nof this rule will be penalized (temp or perm). And a timespan for"
      },
      "Srt.Api.Models.ApiSharedParamsMsgPoco": {
        "type": "object",
        "properties": {
          "Msgs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiMsgPocoMsg"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsPgpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AddPgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "HidePgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "ExemptFiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "UseEvents": {
            "type": "integer",
            "format": "int32"
          },
          "RetainFileSize": {
            "type": "integer",
            "format": "int32"
          },
          "PgpKeyGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsQuotaPoco": {
        "type": "object",
        "properties": {
          "QuotaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaCntKB": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaFreeFileList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsRolePoco": {
        "type": "object",
        "properties": {
          "IsRoleStandard": {
            "type": "integer",
            "format": "int32"
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsSfsPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AdHocEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QSEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QLAuthRequired": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpire": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpireVal": {
            "type": "integer",
            "format": "int64"
          },
          "ViewableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsSfsPoco.QuickLinkExpiration": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.ApiSharedParamsSftpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsSshPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPubKeyAuth": {
            "type": "integer",
            "format": "int32"
          },
          "KickOnBadHostKey": {
            "type": "integer",
            "format": "int32"
          },
          "MfaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MfaMode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSharedParamsUncPoco": {
        "type": "object",
        "properties": {
          "UncGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSshKeyData": {
        "type": "object",
        "properties": {
          "KeyType": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PubKey": {
            "type": "string",
            "nullable": true
          },
          "PrvKey": {
            "type": "string",
            "nullable": true
          },
          "KeyBlob": {
            "type": "string",
            "nullable": true
          },
          "KeyAlg": {
            "type": "string",
            "nullable": true
          },
          "KeyLen": {
            "type": "integer",
            "format": "int32"
          },
          "SigMd5": {
            "type": "string",
            "nullable": true
          },
          "SigSha1": {
            "type": "string",
            "nullable": true
          },
          "SigSha256": {
            "type": "string",
            "nullable": true
          },
          "KeyCreds": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCredentials"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSshKeyExport": {
        "type": "object",
        "properties": {
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          },
          "ExportType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSshKeyImport": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "KeyData": {
            "type": "string",
            "nullable": true
          },
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSshKeyInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "UserGroupGUID": {
            "type": "string",
            "nullable": true
          },
          "Document": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyData"
          },
          "Fingerprint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiSshKeyList": {
        "type": "object",
        "properties": {
          "Keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiSshKeyInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiThemePocoData": {
        "type": "object",
        "properties": {
          "ThemeGUID": {
            "type": "string",
            "nullable": true
          },
          "ThemeDesc": {
            "type": "string",
            "nullable": true
          },
          "HeaderColor": {
            "type": "string",
            "nullable": true
          },
          "HeaderColorText": {
            "type": "string",
            "nullable": true
          },
          "ContentColor": {
            "type": "string",
            "nullable": true
          },
          "ContentColorText": {
            "type": "string",
            "nullable": true
          },
          "FooterColor": {
            "type": "string",
            "nullable": true
          },
          "FooterColorText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Themes are the color schemes"
      },
      "Srt.Api.Models.ApiTicketAccess": {
        "enum": [
          0,
          1,
          16,
          17,
          256,
          257
        ],
        "type": "integer",
        "description": "Set up the types of access a recipient has. They can View the \r\nfile in the browser using our built-in viewer, or they can\r\nDownload the file, or both...or neither which gives the Admin\r\nthe ability to revoke access to a ticket.",
        "format": "int32"
      },
      "Srt.Api.Models.ApiTicketAccessData": {
        "type": "object",
        "properties": {
          "AccessDate": {
            "type": "integer",
            "format": "int64"
          },
          "AccessIp": {
            "type": "string",
            "nullable": true
          },
          "AccessType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketAccess"
          },
          "AccessResult": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTicketDataDocument": {
        "type": "object",
        "properties": {
          "ExpirationInfo": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketExpiration"
          },
          "NotifyMeOnAccess": {
            "type": "boolean"
          },
          "NotifyUsersByEmail": {
            "type": "boolean"
          },
          "To": {
            "type": "string",
            "nullable": true
          },
          "From": {
            "type": "string",
            "nullable": true
          },
          "ReturnReceipt": {
            "type": "boolean"
          },
          "HtmlEmail": {
            "type": "boolean"
          },
          "Message": {
            "type": "string",
            "nullable": true
          },
          "Subject": {
            "type": "string",
            "nullable": true
          },
          "AccessTrail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketAccessData"
            },
            "nullable": true
          },
          "Clicks": {
            "type": "integer",
            "format": "int32"
          },
          "ShareAs": {
            "type": "string",
            "nullable": true
          },
          "AllowAce": {
            "type": "string",
            "nullable": true
          },
          "DenyAce": {
            "type": "string",
            "nullable": true
          },
          "AccessMode": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketAccess"
          },
          "TicketType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketType"
          },
          "SharedObjectList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTicketExpiration": {
        "type": "object",
        "properties": {
          "ExpirationType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiSharedParamsSfsPoco.QuickLinkExpiration"
          },
          "ExpirationMaxValue": {
            "type": "integer",
            "format": "int64"
          },
          "ExpirationCurValue": {
            "type": "integer",
            "format": "int64"
          },
          "ExpirationDate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTicketInfo": {
        "type": "object",
        "properties": {
          "TicketGUID": {
            "type": "string",
            "format": "uuid"
          },
          "OwnerGUID": {
            "type": "string",
            "format": "uuid"
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          },
          "ObjectGUID": {
            "type": "string",
            "format": "uuid"
          },
          "Document": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketDataDocument"
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "ParentGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "LinkGUID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ObType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "FullyQualifiedPathAndFileName": {
            "type": "string",
            "nullable": true
          },
          "ObjectData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTicketListResponse": {
        "type": "object",
        "properties": {
          "Files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiFileInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTicketType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.ApiTickets": {
        "type": "object",
        "properties": {
          "ObjectGUID": {
            "type": "string",
            "nullable": true
          },
          "TicketGUID": {
            "type": "string",
            "nullable": true
          },
          "OwnerGUID": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "nullable": true
          },
          "MyShares": {
            "type": "boolean"
          },
          "Tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketInfo"
            },
            "nullable": true
          },
          "Recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "To": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Objects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ticket": {
            "type": "string",
            "nullable": true
          },
          "Files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiFileInfo"
            },
            "nullable": true
          },
          "Document": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTicketDataDocument"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTlsKeyData": {
        "type": "object",
        "properties": {
          "KeyType": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PubKey": {
            "type": "string",
            "nullable": true
          },
          "PrvKey": {
            "type": "string",
            "nullable": true
          },
          "KeyBlob": {
            "type": "string",
            "nullable": true
          },
          "KeyAlg": {
            "type": "string",
            "nullable": true
          },
          "KeyLen": {
            "type": "integer",
            "format": "int32"
          },
          "SigMd5": {
            "type": "string",
            "nullable": true
          },
          "SigSha1": {
            "type": "string",
            "nullable": true
          },
          "SigSha256": {
            "type": "string",
            "nullable": true
          },
          "KeyCreds": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiCredentials"
          },
          "Cert": {
            "type": "string",
            "nullable": true
          },
          "Csr": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTlsKeyExport": {
        "type": "object",
        "properties": {
          "ExportPrivateKey": {
            "type": "boolean"
          },
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTlsKeyImport": {
        "type": "object",
        "properties": {
          "Cert": {
            "type": "string",
            "nullable": true
          },
          "Csr": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTlsKeyInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "UserGroupGUID": {
            "type": "string",
            "nullable": true
          },
          "Document": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyData"
          },
          "KeyLen": {
            "type": "integer",
            "format": "int32"
          },
          "PrivateKeyPassword": {
            "type": "string",
            "nullable": true
          },
          "CommonName": {
            "type": "string",
            "nullable": true
          },
          "Organization": {
            "type": "string",
            "nullable": true
          },
          "Department": {
            "type": "string",
            "nullable": true
          },
          "Locality": {
            "type": "string",
            "nullable": true
          },
          "State": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          },
          "ValidFrom": {
            "type": "integer",
            "format": "int64"
          },
          "ValidTo": {
            "type": "integer",
            "format": "int64"
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "SigningMethod": {
            "type": "integer",
            "format": "int32"
          },
          "TrustedCertGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiTlsKeyList": {
        "type": "object",
        "properties": {
          "Keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiTlsKeyInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserActionRequest": {
        "type": "object",
        "properties": {
          "DomainData": {
            "type": "boolean"
          },
          "DomainLogs": {
            "type": "boolean"
          },
          "Path": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserActionResponse": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string",
            "nullable": true
          },
          "HomeDir": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserExecResponse": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiErrorInfo"
          },
          "Vars": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "Poco": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPoco"
          },
          "UserList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiUserInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserInfo": {
        "type": "object",
        "properties": {
          "UserGUID": {
            "type": "string",
            "nullable": true
          },
          "AuthGUID": {
            "type": "string",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "UserDesc": {
            "type": "string",
            "nullable": true
          },
          "EmailAddress": {
            "type": "string",
            "nullable": true
          },
          "AuthLogin": {
            "type": "string",
            "nullable": true
          },
          "MobileNumber": {
            "type": "string",
            "nullable": true
          },
          "NotifyPrefs": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserInfoBase": {
        "type": "object",
        "properties": {
          "UserGUID": {
            "type": "string",
            "nullable": true
          },
          "AuthGUID": {
            "type": "string",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserList": {
        "type": "object",
        "properties": {
          "UserList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiUserInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsAVPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuarAction": {
            "type": "integer",
            "format": "int32"
          },
          "RealTime": {
            "type": "integer",
            "format": "int32"
          },
          "Timeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsAcctPoco": {
        "type": "object",
        "properties": {
          "AlwaysAllowLogin": {
            "type": "integer",
            "format": "int32"
          },
          "KickDisabledUsers": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPass": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctForBadPassCnt": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctNotifyUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctKickUser": {
            "type": "integer",
            "format": "int32"
          },
          "LockAcctBanIP": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordHistoryCnt": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "PasswordExpirationCnt": {
            "type": "integer",
            "format": "int64"
          },
          "CanChangePassword": {
            "type": "integer",
            "format": "int32"
          },
          "ForceComplexPassword": {
            "type": "integer",
            "format": "int32"
          },
          "ComplexPasswordRules": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiComplexPasswordRulesPoco"
          },
          "AcctExpirationEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationInterval": {
            "type": "integer",
            "format": "int32"
          },
          "AcctExpirationCnt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsBrandPoco": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsCloudFolderPoco": {
        "type": "object",
        "properties": {
          "CloudGUID": {
            "type": "string",
            "nullable": true
          },
          "CloudName": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ConnectorName": {
            "type": "string",
            "nullable": true
          },
          "ServerUrl": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "ServerPortEnable": {
            "type": "boolean"
          },
          "ServerPortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "AccessToken": {
            "type": "string",
            "nullable": true
          },
          "RefreshToken": {
            "type": "string",
            "nullable": true
          },
          "SharePointSites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiCloudSharePointSite"
            },
            "nullable": true
          },
          "AccessKey": {
            "type": "string",
            "nullable": true
          },
          "SecretKey": {
            "type": "string",
            "nullable": true
          },
          "BucketList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "BucketRegion": {
            "type": "string",
            "nullable": true
          },
          "ConnectorConfig": {
            "type": "string",
            "nullable": true
          },
          "CustomSettings": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsCxnPoco": {
        "type": "object",
        "properties": {
          "IdleTimeoutEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "IdleTimeoutCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxConnIpCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxUlNumCnt": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MaxDlNumCnt": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsDavPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsFileDirPoco": {
        "type": "object",
        "properties": {
          "BanFileTypesEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "BanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "AutoBanFileTypesList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "HideInaccessibleDirs": {
            "type": "integer",
            "format": "int32"
          },
          "SecureFileDelete": {
            "type": "integer",
            "format": "int32"
          },
          "DelPartFiles": {
            "type": "integer",
            "format": "int32"
          },
          "DelMetaWithFiles": {
            "type": "integer",
            "format": "int32"
          },
          "ShowHiddenFiles": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "WriteCacheSizeMB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsFtpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneAdjust": {
            "type": "integer",
            "format": "int32"
          },
          "TimeZoneMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ModeZLevel": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMDTM": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFCT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowMFMT": {
            "type": "integer",
            "format": "int32"
          },
          "AllowNullCWD": {
            "type": "integer",
            "format": "int32"
          },
          "BlockAntiTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "NlstReturnsDirs": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsFtpsPoco": {
        "type": "object",
        "properties": {
          "ExplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "ImplicitEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPROT": {
            "type": "integer",
            "format": "int32"
          },
          "FipsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DefaultPROTP": {
            "type": "integer",
            "format": "int32"
          },
          "RequireFtps": {
            "type": "integer",
            "format": "int32"
          },
          "AllowCCC": {
            "type": "integer",
            "format": "int32"
          },
          "RequireCerts": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsGeneralPoco": {
        "type": "object",
        "properties": {
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "HomeDirInherit": {
            "type": "integer",
            "format": "int32"
          },
          "PrimaryGroupGUID": {
            "type": "string",
            "format": "uuid"
          },
          "UserDesc": {
            "type": "string",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "EmailAddress": {
            "type": "string",
            "nullable": true
          },
          "MobileNumber": {
            "type": "string",
            "nullable": true
          },
          "NotifyPrefs": {
            "type": "string",
            "nullable": true
          },
          "HomeDir": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsHttpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "TlsCertGUID": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsIdentPoco": {
        "type": "object",
        "properties": {
          "AcctEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "AcctType": {
            "type": "integer",
            "format": "int32"
          },
          "AcctEnabledDate": {
            "type": "integer",
            "format": "int64"
          },
          "AcctCreatedDate": {
            "type": "integer",
            "format": "int64"
          },
          "LastLoginUtc": {
            "type": "integer",
            "format": "int64"
          },
          "LastFailedLoginUtc": {
            "type": "integer",
            "format": "int64"
          },
          "AccessFailedCount": {
            "type": "integer",
            "format": "int64"
          },
          "LockoutExpiration": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsIpAccessRulesPoco": {
        "type": "object",
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsPgpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AddPgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "HidePgpExtension": {
            "type": "integer",
            "format": "int32"
          },
          "ExemptFiles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "UseEvents": {
            "type": "integer",
            "format": "int32"
          },
          "RetainFileSize": {
            "type": "integer",
            "format": "int32"
          },
          "PgpKeyGUID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsPoco": {
        "type": "object",
        "properties": {
          "UserGUID": {
            "type": "string",
            "nullable": true
          },
          "AuthGUID": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "CreateHomeDirNow": {
            "type": "integer",
            "format": "int32"
          },
          "General": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsGeneralPoco"
          },
          "Acct": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsAcctPoco"
          },
          "AV": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsAVPoco"
          },
          "Brand": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsBrandPoco"
          },
          "Cxn": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsCxnPoco"
          },
          "Dav": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsDavPoco"
          },
          "Sfs": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsSfsPoco"
          },
          "FileDir": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsFileDirPoco"
          },
          "Ftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsFtpPoco"
          },
          "Ftps": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsFtpsPoco"
          },
          "Http": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsHttpPoco"
          },
          "IpAccessRules": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsIpAccessRulesPoco"
          },
          "Pgp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsPgpPoco"
          },
          "Quota": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsQuotaPoco"
          },
          "Role": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsRolePoco"
          },
          "RoleParams": {
            "type": "string",
            "nullable": true
          },
          "Ssh": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsSshPoco"
          },
          "Sftp": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsSftpPoco"
          },
          "Stats": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsStatsPoco"
          },
          "Ident": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiUserParamsIdentPoco"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsQuotaPoco": {
        "type": "object",
        "properties": {
          "QuotaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaCntKB": {
            "type": "integer",
            "format": "int32"
          },
          "QuotaFreeFileList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "CurrentUsageKB": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsRolePoco": {
        "type": "object",
        "properties": {
          "IsRoleStandard": {
            "type": "integer",
            "format": "int32"
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsSfsPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AdHocEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "DZEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QSEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "QLAuthRequired": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpire": {
            "type": "integer",
            "format": "int32"
          },
          "QLDefExpireVal": {
            "type": "integer",
            "format": "int64"
          },
          "ViewableTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "TlsCertGUID": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsSftpPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "LockFileOnWrite": {
            "type": "integer",
            "format": "int32"
          },
          "Utf8Enabled": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsSshPoco": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "integer",
            "format": "int32"
          },
          "AllowPubKeyAuth": {
            "type": "integer",
            "format": "int32"
          },
          "KickOnBadHostKey": {
            "type": "integer",
            "format": "int32"
          },
          "MfaEnabled": {
            "type": "integer",
            "format": "int32"
          },
          "MfaMode": {
            "type": "integer",
            "format": "int32"
          },
          "HostKeyGUID": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUserParamsStatsPoco": {
        "type": "object",
        "properties": {
          "LastLoginDate": {
            "type": "integer",
            "format": "int64"
          },
          "BadPassVal": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUtilSqlParamsPoco": {
        "type": "object",
        "properties": {
          "DatabaseType": {
            "type": "string",
            "nullable": true
          },
          "Instance": {
            "type": "string",
            "nullable": true
          },
          "Database": {
            "type": "string",
            "nullable": true
          },
          "IntegratedSecurity": {
            "type": "boolean"
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiUtilSqlServerInfo": {
        "type": "object",
        "properties": {
          "ServerName": {
            "type": "string",
            "nullable": true
          },
          "ServerGUID": {
            "type": "string",
            "nullable": true
          },
          "Database": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiVirtualFolderPoco": {
        "type": "object",
        "properties": {
          "Level": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          },
          "LinkId": {
            "type": "string",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "nullable": true
          },
          "ActualPath": {
            "type": "string",
            "nullable": true
          },
          "UserGroupGUID": {
            "type": "string",
            "nullable": true
          },
          "AllowAce": {
            "type": "string",
            "nullable": true
          },
          "DenyAce": {
            "type": "string",
            "nullable": true
          },
          "FolderType": {
            "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderType"
          },
          "CloudFolderGUID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiVirtualFolderResponse": {
        "type": "object",
        "properties": {
          "VirtualFolderList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Srt.Api.Models.ApiVirtualFolderPoco"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.ApiVirtualFolderType": {
        "enum": [
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.FileTransferMode": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.SyncOptionsIfExistsBoth": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.SyncOptionsIfExistsDestOnly": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.SyncOptionsIfExistsSourceOnly": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.Api.Models.TransferFileItem": {
        "type": "object",
        "properties": {
          "FileSpec": {
            "type": "string",
            "nullable": true
          },
          "IsFolder": {
            "type": "boolean"
          },
          "IncludeSubDirectories": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Srt.Api.Models.TransferType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Srt.NextGen.ServerCore.NxCredentials": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This class is used to store credentials in the system. We'll encrypt the information through\r\nserialization/deserialization and then will change the property names as they\r\nlive in the DB just to make it a tad more difficult."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "SRT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      },
      "basic": {
        "type": "http",
        "description": "Basic Authorization header using the Bearer scheme.",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    },
    {
      "basic": [ ]
    }
  ]
}